{"version":3,"sources":["webpack:///static/js/6.a9d41c1227402ef9b6ab.js","webpack:///./script/build/utils/xhr.js","webpack:///./node_modules/_immutable@3.8.2@immutable/dist/immutable.js","webpack:///./script/build/components/goodslist.js"],"names":["webpackJsonp","138","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","xhr","opt","this","method","aysc","sendData","cache","assign","url","send","value","_xhr","XMLHttpRequest","timeout","withCredentials","open","setHeader","setRequestHeader","onload","readyState","status","sucData","response","JSON","parse","done","error","Error","faild","bind","onerror","data","185","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","undefined","call","createClass","ctor","superClass","create","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","newArr","Array","ii","ensureSize","iter","size","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterator","next","iteratorValue","type","k","v","iteratorResult","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","array","_array","ObjectSeq","object","keys","_object","_keys","IterableSeq","_iterable","IteratorSeq","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","isArray","maybeIndexedSeqFromValue","seqIterate","fn","reverse","useKeys","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","fromJS","json","converter","fromJSWith","","fromJSDefault","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","cacheResult","_","allEqual","bSize","has","get","NOT_SET","Repeat","times","_value","Infinity","EMPTY_REPEAT","invariant","condition","Range","start","step","abs","_start","_end","_step","ceil","EMPTY_RANGE","Collection","KeyedCollection","IndexedCollection","SetCollection","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","toString","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","apply","arguments","nodeType","node","uniqueID","documentElement","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","nodes","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","prev","__prev","makeMap","root","MapPrototype","__ownerID","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","shift","update","isLeafNode","mergeIntoNode","newNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","iters","push","mergeIntoCollectionWith","deepMerger","existing","mergeDeep","deepMergerWith","mergeDeepWith","nextValue","collection","filter","x","mergeIntoMap","updateInDeepMap","keyPathIter","notSetValue","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","idx","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","pop","List","empty","emptyList","isList","makeList","VNode","toArray","list","setSize","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","from","left","to","right","DONE","values","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","slice","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","OrderedMap","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","flip","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","flipFactory","flipSequence","makeSequence","reversedSequence","includes","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","context","mappedSequence","c","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","groups","asMutable","asImmutable","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","resolvedSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","stack","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","makeRecord","likeRecord","record","getPrototypeOf","recordName","names","setProp","Set","emptySet","isSet","add","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","stringify","String","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","murmurHashOfSize","hashMerge","imul","SLICE$0","Keyed","Indexed","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","hasOwnProperty","searchValue","indexOf","lastIndexOf","other","possibleIndex","floor","offsetValue","d","e","WeakMap","keyValues","updateIn","deleteIn","updatedValue","merge","mergeWith","mergeIn","m","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","removed","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","splice","insert","oldSize","unshift","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","valueSeq","indexedIterable","defaultVal","_empty","fromKeys","keySeq","union","intersect","originalSet","subtract","peek","pushAll","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","isEmpty","countBy","entriesSequence","filterNot","found","findKey","findLast","findLastEntry","findLastKey","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyOf","last","lastKeyOf","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","contains","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","47","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","setPrototypeOf","__proto__","formatDate","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","filterContent","words","num","mapStateToProps","state","ownProps","listGoods","doneLoading","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_3__actions_actions__","__WEBPACK_IMPORTED_MODULE_4_react_router_dom__","__WEBPACK_IMPORTED_MODULE_5_immutable__","goodslist","_Component","_this2","fetch","credentials","then","res","ok","doneLoadingAction","listGoodsAction","createElement","className","item","Blog_item","goodsid","style","padding","color","_React$Component","itemEle","category","content","src","path","width","controls","autoPlay","user","Date","_time","title","Component"],"mappings":"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","file":"static/js/6.a9d41c1227402ef9b6ab.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 138:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar xhr = function () {\n\tfunction xhr(opt) {\n\t\t_classCallCheck(this, xhr);\n\n\t\tthis.method = 'GET';\n\t\tthis.aysc = true;\n\t\tthis.sendData = null;\n\t\tthis.cache = true;\n\t\tif ((typeof opt === 'undefined' ? 'undefined' : _typeof(opt)) === 'object') {\n\t\t\tObject.assign(this, opt);\n\t\t}\n\t\tthis.url = \"https://www.macsen318.com\" + this.url;\n\t\tthis.send();\n\t}\n\n\t_createClass(xhr, [{\n\t\tkey: 'send',\n\t\tvalue: function send() {\n\t\t\tvar _xhr = new XMLHttpRequest();\n\t\t\t_xhr.timeout = 60000;\n\t\t\tthis.withCredentials && (_xhr.withCredentials = true);\n\t\t\t_xhr.withCredentials = true;\n\t\t\t_xhr.open(this.method, this.url, this.aysc);\n\n\t\t\tif (this.setHeader) {\n\t\t\t\t_xhr.setRequestHeader(\"Content-Type\", this.setHeader);\n\t\t\t}\n\t\t\tif (!this.cache) {\n\t\t\t\t_xhr.setRequestHeader(\"Pragma\", \"no-cache\");\n\t\t\t\t_xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\t\t\t}\n\n\t\t\t_xhr.onload = function () {\n\t\t\t\tif (_xhr.readyState === 4) {\n\t\t\t\t\tif (_xhr.status === 200) {\n\t\t\t\t\t\tvar sucData;\n\t\t\t\t\t\tif (_xhr.response) {\n\t\t\t\t\t\t\tsucData = JSON.parse(_xhr.response);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.done(sucData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar error = new Error(\"something went wrong\");\n\t\t\t\t\t\tthis.faild(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(this);\n\t\t\t_xhr.onerror = function (error) {\n\t\t\t\tthis.faild(error);\n\t\t\t}.bind(this);\n\t\t\t_xhr.send(this.sendData);\n\t\t}\n\t}, {\n\t\tkey: 'done',\n\t\tvalue: function done(data) {}\n\t}, {\n\t\tkey: 'faild',\n\t\tvalue: function faild() {}\n\t}]);\n\n\treturn xhr;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (xhr);\n\n/***/ }),\n\n/***/ 185:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.Immutable = factory();\n})(this, function () {\n  'use strict';\n  var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n    return isIterable(value) ? value : Seq(value);\n  }\n\n  createClass(KeyedIterable, Iterable);\n  function KeyedIterable(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  createClass(IndexedIterable, Iterable);\n  function IndexedIterable(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  createClass(SetIterable, Iterable);\n  function SetIterable(value) {\n    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n  function Iterator(next) {\n    this.next = next;\n  }\n\n  Iterator.prototype.toString = function () {\n    return '[Iterator]';\n  };\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {\n    return this.toString();\n  };\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? iteratorResult.value = value : iteratorResult = {\n      value: value, done: false\n    };\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n  }\n\n  Seq.of = function () /*...values*/{\n    return Seq(arguments);\n  };\n\n  Seq.prototype.toSeq = function () {\n    return this;\n  };\n\n  Seq.prototype.toString = function () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n    return this;\n  };\n\n  // abstract __iterateUncached(fn, reverse)\n\n  Seq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, true);\n  };\n\n  // abstract __iteratorUncached(type, reverse)\n\n  Seq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, true);\n  };\n\n  createClass(KeyedSeq, Seq);\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);\n  }\n\n  KeyedSeq.prototype.toKeyedSeq = function () {\n    return this;\n  };\n\n  createClass(IndexedSeq, Seq);\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n  }\n\n  IndexedSeq.of = function () /*...values*/{\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function () {\n    return this.__toString('Seq [', ']');\n  };\n\n  IndexedSeq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, false);\n  };\n\n  IndexedSeq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, false);\n  };\n\n  createClass(SetSeq, Seq);\n  function SetSeq(value) {\n    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n  }\n\n  SetSeq.of = function () /*...values*/{\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function () {\n    return this;\n  };\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n  createClass(ArraySeq, IndexedSeq);\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  ArraySeq.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function (fn, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n\n  ArraySeq.prototype.__iterator = function (type, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n    });\n  };\n\n  createClass(ObjectSeq, KeyedSeq);\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  ObjectSeq.prototype.get = function (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function (key) {\n    return this._object.hasOwnProperty(key);\n  };\n\n  ObjectSeq.prototype.__iterate = function (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      if (fn(object[key], key, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n\n  ObjectSeq.prototype.__iterator = function (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n    });\n  };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n  createClass(IterableSeq, IndexedSeq);\n  function IterableSeq(iterable) {\n    this._iterable = iterable;\n    this.size = iterable.length || iterable.size;\n  }\n\n  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    var iterations = 0;\n    if (isIterator(iterator)) {\n      var step;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n    return iterations;\n  };\n\n  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  createClass(IteratorSeq, IndexedSeq);\n  function IteratorSeq(iterator) {\n    this._iterator = iterator;\n    this._iteratorCache = [];\n  }\n\n  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    while (iterations < cache.length) {\n      if (fn(cache[iterations], iterations++, this) === false) {\n        return iterations;\n      }\n    }\n    var step;\n    while (!(step = iterator.next()).done) {\n      var val = step.value;\n      cache[iterations] = val;\n      if (fn(val, iterations++, this) === false) {\n        break;\n      }\n    }\n    return iterations;\n  };\n\n  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    return new Iterator(function () {\n      if (iterations >= cache.length) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        cache[iterations] = step.value;\n      }\n      return iteratorValue(type, iterations, cache[iterations++]);\n    });\n  };\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' ? new ObjectSeq(value) : undefined;\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values: ' + value);\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && new ObjectSeq(value);\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function () {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ? fromJSWith(converter, json, '', { '': json }) : fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function (v, k) {\n      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  Repeat.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n\n  Repeat.prototype.reverse = function () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function (fn, reverse) {\n    for (var ii = 0; ii < this.size; ii++) {\n      if (fn(this._value, ii, this) === false) {\n        return ii + 1;\n      }\n    }\n    return ii;\n  };\n\n  Repeat.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();\n    });\n  };\n\n  Repeat.prototype.equals = function (other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n    if (end === undefined) {\n      end = Infinity;\n    }\n    step = step === undefined ? 1 : Math.abs(step);\n    if (end < start) {\n      step = -step;\n    }\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n      EMPTY_RANGE = this;\n    }\n  }\n\n  Range.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n\n  Range.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n\n  Range.prototype.includes = function (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n\n  Range.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n\n  Range.prototype.indexOf = function (searchValue) {\n    var offsetValue = searchValue - this._start;\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function (fn, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(value, ii, this) === false) {\n        return ii + 1;\n      }\n      value += reverse ? -step : step;\n    }\n    return ii;\n  };\n\n  Range.prototype.__iterator = function (type, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    var ii = 0;\n    return new Iterator(function () {\n      var v = value;\n      value += reverse ? -step : step;\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n    });\n  };\n\n  Range.prototype.equals = function (other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n  function Collection() {\n    throw TypeError('Abstract');\n  }\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n    a = a | 0; // int\n    b = b | 0; // int\n    var c = a & 0xffff;\n    var d = b & 0xffff;\n    // Shift by 0 fixes the sign on the high part.\n    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n  };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o === 'undefined' ? 'undefined' : _typeof(o);\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function () {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = function () {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }();\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1:\n          // Element\n          return node.uniqueID;\n        case 9:\n          // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n  }\n\n  createClass(Map, KeyedCollection);\n\n  // @pragma Construction\n\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  Map.of = function () {\n    var keyValues = SLICE$0.call(arguments, 0);\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function () {\n    return this.__toString('Map {', '}');\n  };\n\n  // @pragma Access\n\n  Map.prototype.get = function (k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  };\n\n  // @pragma Modification\n\n  Map.prototype.set = function (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.setIn = function (keyPath, v) {\n    return this.updateIn(keyPath, NOT_SET, function () {\n      return v;\n    });\n  };\n\n  Map.prototype.remove = function (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteIn = function (keyPath) {\n    return this.updateIn(keyPath, function () {\n      return NOT_SET;\n    });\n  };\n\n  Map.prototype.update = function (k, notSetValue, updater) {\n    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);\n  };\n\n  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {\n    if (!updater) {\n      updater = notSetValue;\n      notSetValue = undefined;\n    }\n    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);\n    return updatedValue === NOT_SET ? undefined : updatedValue;\n  };\n\n  Map.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyMap();\n  };\n\n  // @pragma Composition\n\n  Map.prototype.merge = function () /*...iters*/{\n    return mergeIntoMapWith(this, undefined, arguments);\n  };\n\n  Map.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, merger, iters);\n  };\n\n  Map.prototype.mergeIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.mergeDeep = function () /*...iters*/{\n    return mergeIntoMapWith(this, deepMerger, arguments);\n  };\n\n  Map.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n  };\n\n  Map.prototype.mergeDeepIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  // @pragma Mutability\n\n  Map.prototype.withMutations = function (fn) {\n    var mutable = this.asMutable();\n    fn(mutable);\n    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n  };\n\n  Map.prototype.asMutable = function () {\n    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n  };\n\n  Map.prototype.asImmutable = function () {\n    return this.__ensureOwner();\n  };\n\n  Map.prototype.wasAltered = function () {\n    return this.__altered;\n  };\n\n  Map.prototype.__iterator = function (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$0);\n    }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n  // #pragma Trie Nodes\n\n\n  function ArrayMapNode(ownerID, entries) {\n    this.ownerID = ownerID;\n    this.entries = entries;\n  }\n\n  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  };\n\n  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && entries.length === 1) {\n      return; // undefined\n    }\n\n    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n      return createNodes(ownerID, entries, key, value);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new ArrayMapNode(ownerID, newEntries);\n  };\n\n  function BitmapIndexedNode(ownerID, bitmap, nodes) {\n    this.ownerID = ownerID;\n    this.bitmap = bitmap;\n    this.nodes = nodes;\n  }\n\n  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n    var bitmap = this.bitmap;\n    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n  };\n\n  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var bit = 1 << keyHashFrag;\n    var bitmap = this.bitmap;\n    var exists = (bitmap & bit) !== 0;\n\n    if (!exists && value === NOT_SET) {\n      return this;\n    }\n\n    var idx = popCount(bitmap & bit - 1);\n    var nodes = this.nodes;\n    var node = exists ? nodes[idx] : undefined;\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n    if (newNode === node) {\n      return this;\n    }\n\n    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n    }\n\n    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n      return nodes[idx ^ 1];\n    }\n\n    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n      return newNode;\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.bitmap = newBitmap;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n  };\n\n  function HashArrayMapNode(ownerID, count, nodes) {\n    this.ownerID = ownerID;\n    this.count = count;\n    this.nodes = nodes;\n  }\n\n  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var node = this.nodes[idx];\n    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n  };\n\n  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var removed = value === NOT_SET;\n    var nodes = this.nodes;\n    var node = nodes[idx];\n\n    if (removed && !node) {\n      return this;\n    }\n\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n    if (newNode === node) {\n      return this;\n    }\n\n    var newCount = this.count;\n    if (!node) {\n      newCount++;\n    } else if (!newNode) {\n      newCount--;\n      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n        return packNodes(ownerID, nodes, newCount, idx);\n      }\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.count = newCount;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new HashArrayMapNode(ownerID, newCount, newNodes);\n  };\n\n  function HashCollisionNode(ownerID, keyHash, entries) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entries = entries;\n  }\n\n  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n    return notSetValue;\n  };\n\n  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var removed = value === NOT_SET;\n\n    if (keyHash !== this.keyHash) {\n      if (removed) {\n        return this;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n    }\n\n    var entries = this.entries;\n    var idx = 0;\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && len === 2) {\n      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n  };\n\n  function ValueNode(ownerID, keyHash, entry) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entry = entry;\n  }\n\n  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n  };\n\n  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var keyMatch = is(key, this.entry[0]);\n    if (keyMatch ? value === this.entry[1] : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n\n    if (removed) {\n      SetRef(didChangeSize);\n      return; // undefined\n    }\n\n    if (keyMatch) {\n      if (ownerID && ownerID === this.ownerID) {\n        this.entry[1] = value;\n        return this;\n      }\n      return new ValueNode(ownerID, this.keyHash, [key, value]);\n    }\n\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n  };\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n\n  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  };\n\n  createClass(MapIterator, Iterator);\n\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  MapIterator.prototype.next = function () {\n    var type = this._type;\n    var stack = this._stack;\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex;\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n          continue;\n        }\n      }\n      stack = this._stack = this._stack.__prev;\n    }\n    return iteratorDone();\n  };\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function (existing, value, key) {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function (collection) {\n      var mergeIntoMap = merger ? function (value, key) {\n        collection.update(key, NOT_SET, function (existing) {\n          return existing === NOT_SET ? value : merger(existing, value, key);\n        });\n      } : function (value, key) {\n        collection.set(key, value);\n      };\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(isNotSet || existing && existing.set, 'invalid keyPath');\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);\n    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - (x >> 1 & 0x55555555);\n    x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n    x = x + (x >> 4) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n  // @pragma Construction\n\n  function List(value) {\n    var empty = emptyList();\n    if (value === null || value === undefined) {\n      return empty;\n    }\n    if (isList(value)) {\n      return value;\n    }\n    var iter = IndexedIterable(value);\n    var size = iter.size;\n    if (size === 0) {\n      return empty;\n    }\n    assertNotInfinite(size);\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n\n  List.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  List.prototype.toString = function () {\n    return this.__toString('List [', ']');\n  };\n\n  // @pragma Access\n\n  List.prototype.get = function (index, notSetValue) {\n    index = wrapIndex(this, index);\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n    return notSetValue;\n  };\n\n  // @pragma Modification\n\n  List.prototype.set = function (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function (index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyList();\n  };\n\n  List.prototype.push = function () /*...values*/{\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function () /*...values*/{\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function () {\n    return setListBounds(this, 1);\n  };\n\n  // @pragma Composition\n\n  List.prototype.merge = function () /*...iters*/{\n    return mergeIntoListWith(this, undefined, arguments);\n  };\n\n  List.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, merger, iters);\n  };\n\n  List.prototype.mergeDeep = function () /*...iters*/{\n    return mergeIntoListWith(this, deepMerger, arguments);\n  };\n\n  List.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, deepMergerWith(merger), iters);\n  };\n\n  List.prototype.setSize = function (size) {\n    return setListBounds(this, 0, size);\n  };\n\n  // @pragma Iteration\n\n  List.prototype.slice = function (begin, end) {\n    var size = this.size;\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n\n  List.prototype.__iterator = function (type, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function (fn, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    var value;\n    while ((value = values()) !== DONE) {\n      if (fn(value, index++, this) === false) {\n        break;\n      }\n    }\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      return this;\n    }\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function VNode(array, ownerID) {\n    this.array = array;\n    this.ownerID = ownerID;\n  }\n\n  // TODO: seems like these methods are very similar\n\n  VNode.prototype.removeBefore = function (ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n    var originIndex = index >>> level & MASK;\n    if (originIndex >= this.array.length) {\n      return new VNode([], ownerID);\n    }\n    var removingFirst = originIndex === 0;\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[originIndex];\n      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && removingFirst) {\n        return this;\n      }\n    }\n    if (removingFirst && !newChild) {\n      return this;\n    }\n    var editable = editableVNode(this, ownerID);\n    if (!removingFirst) {\n      for (var ii = 0; ii < originIndex; ii++) {\n        editable.array[ii] = undefined;\n      }\n    }\n    if (newChild) {\n      editable.array[originIndex] = newChild;\n    }\n    return editable;\n  };\n\n  VNode.prototype.removeAfter = function (ownerID, level, index) {\n    if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n      return this;\n    }\n    var sizeIndex = index - 1 >>> level & MASK;\n    if (sizeIndex >= this.array.length) {\n      return this;\n    }\n\n    var newChild;\n    if (level > 0) {\n      var oldChild = this.array[sizeIndex];\n      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n      if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n        return this;\n      }\n    }\n\n    var editable = editableVNode(this, ownerID);\n    editable.array.splice(sizeIndex + 1);\n    if (newChild) {\n      editable.array[sizeIndex] = newChild;\n    }\n    return editable;\n  };\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function () {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : left - offset >> level;\n      var to = (right - offset >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function () {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function (list) {\n        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = index >>> level & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << list._level + SHIFT) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[rawIndex >>> level & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << newLevel + SHIFT) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = oldTailOffset >>> level & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n      // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = newOrigin >>> newLevel & MASK;\n        if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n  }\n\n  createClass(OrderedMap, Map);\n\n  // @pragma Construction\n\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  OrderedMap.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function () {\n    return this.__toString('OrderedMap {', '}');\n  };\n\n  // @pragma Access\n\n  OrderedMap.prototype.get = function (k, notSetValue) {\n    var index = this._map.get(k);\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  };\n\n  // @pragma Modification\n\n  OrderedMap.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._map.clear();\n      this._list.clear();\n      return this;\n    }\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$0);\n    }, reverse);\n  };\n\n  OrderedMap.prototype.__iterator = function (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    var newList = this._list.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) {\n      // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function (entry, idx) {\n          return entry !== undefined && i !== idx;\n        });\n        newMap = newList.toKeyedSeq().map(function (entry) {\n          return entry[0];\n        }).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  ToKeyedSequence.prototype.get = function (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function () {\n    var this$0 = this;\n    var reversedSequence = reverseFactory(this, true);\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().reverse();\n      };\n    }\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function (mapper, context) {\n    var this$0 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().map(mapper, context);\n      };\n    }\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var ii;\n    return this._iter.__iterate(this._useKeys ? function (v, k) {\n      return fn(v, k, this$0);\n    } : (ii = reverse ? resolveSize(this) : 0, function (v) {\n      return fn(v, reverse ? --ii : ii++, this$0);\n    }), reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function (type, reverse) {\n    if (this._useKeys) {\n      return this._iter.__iterator(type, reverse);\n    }\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var ii = reverse ? resolveSize(this) : 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n    });\n  };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n  createClass(ToIndexedSequence, IndexedSeq);\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToIndexedSequence.prototype.includes = function (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    return this._iter.__iterate(function (v) {\n      return fn(v, iterations++, this$0);\n    }, reverse);\n  };\n\n  ToIndexedSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n\n  createClass(ToSetSequence, SetSeq);\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToSetSequence.prototype.has = function (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$0);\n    }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  createClass(FromEntriesSequence, KeyedSeq);\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  FromEntriesSequence.prototype.entrySeq = function () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedIterable = isIterable(entry);\n        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n\n  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function () {\n      return iterable;\n    };\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function () {\n        return iterable.reverse();\n      };\n      return reversedSequence;\n    };\n    flipSequence.has = function (key) {\n      return iterable.includes(key);\n    };\n    flipSequence.includes = function (key) {\n      return iterable.has(key);\n    };\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(k, v, this$0) !== false;\n      }, reverse);\n    };\n    flipSequence.__iteratorUncached = function (type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function () {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n    };\n    return flipSequence;\n  }\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function (key) {\n      return iterable.has(key);\n    };\n    mappedSequence.get = function (key, notSetValue) {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k, c) {\n        return fn(mapper.call(context, v, k, c), k, this$0) !== false;\n      }, reverse);\n    };\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function () {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n      });\n    };\n    return mappedSequence;\n  }\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function () {\n      return iterable;\n    };\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function () {\n          return iterable.flip();\n        };\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function (key, notSetValue) {\n      return iterable.get(useKeys ? key : -1 - key, notSetValue);\n    };\n    reversedSequence.has = function (key) {\n      return iterable.has(useKeys ? key : -1 - key);\n    };\n    reversedSequence.includes = function (value) {\n      return iterable.includes(value);\n    };\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(v, k, this$0);\n      }, !reverse);\n    };\n    reversedSequence.__iterator = function (type, reverse) {\n      return iterable.__iterator(type, !reverse);\n    };\n    return reversedSequence;\n  }\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function (key) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function (key, notSetValue) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function () {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    };\n    return filterSequence;\n  }\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {\n        return a + 1;\n      });\n    });\n    return groups.asImmutable();\n  }\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), function (a) {\n        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n      });\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function (arr) {\n      return reify(iterable, coerce(arr));\n    });\n  }\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;\n      };\n    }\n\n    sliceSeq.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function (v, k) {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function (type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function () {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    };\n\n    return sliceSeq;\n  }\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);\n      });\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function () {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function (v, k, c) {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function () {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function (v) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function (v) {\n      return v.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(function (sum, seq) {\n      if (sum !== undefined) {\n        var size = seq.size;\n        if (size !== undefined) {\n          return sum + size;\n        }\n      }\n    }, 0);\n    return concatSeq;\n  }\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function (fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {\n        var this$0 = this;\n        iter.__iterate(function (v, k) {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    };\n    flatSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function () {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    };\n    return flatSequence;\n  }\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(function (v, k) {\n      return coerce(mapper.call(context, v, k, iterable));\n    }).flatten(true);\n  }\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n    interposedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function (v, k) {\n        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;\n      }, reverse);\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function () {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(function (v, k) {\n      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];\n    }).toArray();\n    entries.sort(function (a, b) {\n      return comparator(a[3], b[3]) || a[2] - b[2];\n    }).forEach(isKeyedIterable ? function (v, i) {\n      entries[i].length = 2;\n    } : function (v, i) {\n      entries[i] = v[1];\n    });\n    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n  }\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq().map(function (v, k) {\n        return [v, mapper(v, k, iterable)];\n      }).reduce(function (a, b) {\n        return maxCompare(comparator, a[1], b[1]) ? b : a;\n      });\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function (a, b) {\n        return maxCompare(comparator, a, b) ? b : a;\n      });\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n  }\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function (i) {\n      return i.size;\n    }).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function (fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function (type, reverse) {\n      var iterators = iters.map(function (i) {\n        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);\n      });\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function () {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function (i) {\n            return i.next();\n          });\n          isDone = steps.some(function (s) {\n            return s.done;\n          });\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n          return s.value;\n        })));\n      });\n    };\n    return zipSequence;\n  }\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n  function Record(defaultValues, name) {\n    var hasInitialized;\n\n    var RecordType = function Record(values) {\n      if (values instanceof RecordType) {\n        return values;\n      }\n      if (!(this instanceof RecordType)) {\n        return new RecordType(values);\n      }\n      if (!hasInitialized) {\n        hasInitialized = true;\n        var keys = Object.keys(defaultValues);\n        setProps(RecordTypePrototype, keys);\n        RecordTypePrototype.size = keys.length;\n        RecordTypePrototype._name = name;\n        RecordTypePrototype._keys = keys;\n        RecordTypePrototype._defaultValues = defaultValues;\n      }\n      this._map = Map(values);\n    };\n\n    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n    RecordTypePrototype.constructor = RecordType;\n\n    return RecordType;\n  }\n\n  Record.prototype.toString = function () {\n    return this.__toString(recordName(this) + ' {', '}');\n  };\n\n  // @pragma Access\n\n  Record.prototype.has = function (k) {\n    return this._defaultValues.hasOwnProperty(k);\n  };\n\n  Record.prototype.get = function (k, notSetValue) {\n    if (!this.has(k)) {\n      return notSetValue;\n    }\n    var defaultVal = this._defaultValues[k];\n    return this._map ? this._map.get(k, defaultVal) : defaultVal;\n  };\n\n  // @pragma Modification\n\n  Record.prototype.clear = function () {\n    if (this.__ownerID) {\n      this._map && this._map.clear();\n      return this;\n    }\n    var RecordType = this.constructor;\n    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n  };\n\n  Record.prototype.set = function (k, v) {\n    if (!this.has(k)) {\n      throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n    }\n    if (this._map && !this._map.has(k)) {\n      var defaultVal = this._defaultValues[k];\n      if (v === defaultVal) {\n        return this;\n      }\n    }\n    var newMap = this._map && this._map.set(k, v);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.remove = function (k) {\n    if (!this.has(k)) {\n      return this;\n    }\n    var newMap = this._map && this._map.remove(k);\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Record.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterator(type, reverse);\n  };\n\n  Record.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterate(fn, reverse);\n  };\n\n  Record.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map && this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return makeRecord(this, newMap, ownerID);\n  };\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function get() {\n        return this.get(name);\n      },\n      set: function set(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n  // @pragma Construction\n\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  Set.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  Set.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  Set.prototype.toString = function () {\n    return this.__toString('Set {', '}');\n  };\n\n  // @pragma Access\n\n  Set.prototype.has = function (value) {\n    return this._map.has(value);\n  };\n\n  // @pragma Modification\n\n  Set.prototype.add = function (value) {\n    return updateSet(this, this._map.set(value, true));\n  };\n\n  Set.prototype.remove = function (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function () {\n    return updateSet(this, this._map.clear());\n  };\n\n  // @pragma Composition\n\n  Set.prototype.union = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n    if (iters.length === 0) {\n      return this;\n    }\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetIterable(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (!iters.every(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.subtract = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    if (iters.length === 0) {\n      return this;\n    }\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (iters.some(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.merge = function () {\n    return this.union.apply(this, arguments);\n  };\n\n  Set.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.union.apply(this, iters);\n  };\n\n  Set.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._map.__iterate(function (_, k) {\n      return fn(k, k, this$0);\n    }, reverse);\n  };\n\n  Set.prototype.__iterator = function (type, reverse) {\n    return this._map.map(function (_, k) {\n      return k;\n    }).__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    var newMap = this._map.__ensureOwner(ownerID);\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n    return this.__make(newMap, ownerID);\n  };\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n  // @pragma Construction\n\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  OrderedSet.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n  // @pragma Construction\n\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n  }\n\n  Stack.of = function () /*...values*/{\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function () {\n    return this.__toString('Stack [', ']');\n  };\n\n  // @pragma Access\n\n  Stack.prototype.get = function (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n    while (head && index--) {\n      head = head.next;\n    }\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function () {\n    return this._head && this._head.value;\n  };\n\n  // @pragma Modification\n\n  Stack.prototype.push = function () /*...values*/{\n    if (arguments.length === 0) {\n      return this;\n    }\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments[ii],\n        next: head\n      };\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function (iter) {\n    iter = IndexedIterable(iter);\n    if (iter.size === 0) {\n      return this;\n    }\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.reverse().forEach(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    });\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.unshift = function () /*...values*/{\n    return this.push.apply(this, arguments);\n  };\n\n  Stack.prototype.unshiftAll = function (iter) {\n    return this.pushAll(iter);\n  };\n\n  Stack.prototype.shift = function () {\n    return this.pop.apply(this, arguments);\n  };\n\n  Stack.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n    return makeStack(newSize, head);\n  };\n\n  // @pragma Mutability\n\n  Stack.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  };\n\n  // @pragma Iteration\n\n  Stack.prototype.__iterate = function (fn, reverse) {\n    if (reverse) {\n      return this.reverse().__iterate(fn);\n    }\n    var iterations = 0;\n    var node = this._head;\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n      node = node.next;\n    }\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function (type, reverse) {\n    if (reverse) {\n      return this.reverse().__iterator(type);\n    }\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n      return iteratorDone();\n    });\n  };\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function keyCopier(key) {\n      ctor.prototype[key] = methods[key];\n    };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function toArray() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function (v, i) {\n        array[i] = v;\n      });\n      return array;\n    },\n\n    toIndexedSeq: function toIndexedSeq() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function toJS() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJS === 'function' ? value.toJS() : value;\n      }).__toJS();\n    },\n\n    toJSON: function toJSON() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;\n      }).__toJS();\n    },\n\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function toMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function toObject() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function (v, k) {\n        object[k] = v;\n      });\n      return object;\n    },\n\n    toOrderedMap: function toOrderedMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function toOrderedSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function toSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function toSetSeq() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function toSeq() {\n      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n    },\n\n    toStack: function toStack() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function toList() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    // ### Common JavaScript methods and properties\n\n    toString: function toString() {\n      return '[Iterable]';\n    },\n\n    __toString: function __toString(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function concat() {\n      var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function includes(searchValue) {\n      return this.some(function (value) {\n        return is(value, searchValue);\n      });\n    },\n\n    entries: function entries() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function every(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function (v, k, c) {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function find(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function forEach(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function join(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function (v) {\n        isFirst ? isFirst = false : joined += separator;\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function keys() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function map(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function reduce(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function (v, k, c) {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function reduceRight(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function some(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function sort(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function values() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n    // ### More sequential methods\n\n    butLast: function butLast() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function isEmpty() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function () {\n        return true;\n      });\n    },\n\n    count: function count(predicate, context) {\n      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n    },\n\n    countBy: function countBy(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function equals(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function entrySeq() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function () {\n        return iterable.toSeq();\n      };\n      return entriesSequence;\n    },\n\n    filterNot: function filterNot(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function findEntry(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function findKey(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function findLast(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function findLastKey(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function first() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function flatMap(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function fromEntrySeq() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function get(searchKey, notSetValue) {\n      return this.find(function (_, key) {\n        return is(key, searchKey);\n      }, undefined, notSetValue);\n    },\n\n    getIn: function getIn(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function groupBy(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function has(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function hasIn(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function isSubset(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function (value) {\n        return iter.includes(value);\n      });\n    },\n\n    isSuperset: function isSuperset(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function keyOf(searchValue) {\n      return this.findKey(function (value) {\n        return is(value, searchValue);\n      });\n    },\n\n    keySeq: function keySeq() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function last() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function lastKeyOf(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function max(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function maxBy(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function min(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function minBy(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function rest() {\n      return this.slice(1);\n    },\n\n    skip: function skip(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function skipLast(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function skipUntil(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function sortBy(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function take(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function takeLast(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function takeWhile(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function takeUntil(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function valueSeq() {\n      return this.toIndexedSeq();\n    },\n\n    // ### Hashable Object\n\n    hashCode: function hashCode() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect = IterablePrototype.toSource = function () {\n    return this.toString();\n  };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function flip() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function mapEntries(mapper, context) {\n      var this$0 = this;\n      var iterations = 0;\n      return reify(this, this.toSeq().map(function (v, k) {\n        return mapper.call(context, [k, v], iterations++, this$0);\n      }).fromEntrySeq());\n    },\n\n    mapKeys: function mapKeys(mapper, context) {\n      var this$0 = this;\n      return reify(this, this.toSeq().flip().map(function (k, v) {\n        return mapper.call(context, k, v, this$0);\n      }).flip());\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function (v, k) {\n    return JSON.stringify(k) + ': ' + quoteString(v);\n  };\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, false);\n    },\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function findIndex(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function indexOf(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function lastIndexOf(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function splice(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || numArgs === 2 && !removeNum) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n    },\n\n    // ### More collection methods\n\n    findLastIndex: function findLastIndex(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function first() {\n      return this.get(0);\n    },\n\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function get(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n        return key === index;\n      }, undefined, notSetValue);\n    },\n\n    has: function has(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n    },\n\n    interpose: function interpose(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function interleave() /*...iterables*/{\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function keySeq() {\n      return Range(0, this.size);\n    },\n\n    last: function last() {\n      return this.get(-1);\n    },\n\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function zip() /*, ...iterables */{\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function zipWith(zipper /*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function get(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function includes(value) {\n      return this.has(value);\n    },\n\n    // ### More sequential methods\n\n    keySeq: function keySeq() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }\n\n  function neg(predicate) {\n    return function () {\n      return -predicate.apply(this, arguments);\n    };\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {\n      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n    } : function (v, k) {\n      h = h + hashMerge(hash(v), hash(k)) | 0;\n    } : ordered ? function (v) {\n      h = 31 * h + hash(v) | 0;\n    } : function (v) {\n      h = h + hash(v) | 0;\n    });\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n});\n\n/***/ }),\n\n/***/ 47:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_xhr__ = __webpack_require__(138);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__actions_actions__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_router_dom__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_immutable__ = __webpack_require__(185);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_immutable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_immutable__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\nfunction formatDate(now) {\n  var year = now.getFullYear();\n  var month = now.getMonth() + 1;\n  var date = now.getDate();\n  var hour = now.getHours();\n  var minute = now.getMinutes();\n  var second = now.getSeconds();\n  return year + \"-\" + month + \"-\" + date + \"   \" + hour + \":\" + minute + \":\" + second;\n}\n\nfunction filterContent(words, num) {\n  num = num || 100;\n  return words.length > num ? words.slice(0, num) + '...' : words;\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    listGoods: state.listGoods,\n    doneLoading: state.doneLoading\n  };\n}\n\nvar goodslist = function (_Component) {\n  _inherits(goodslist, _Component);\n\n  function goodslist(props) {\n    _classCallCheck(this, goodslist);\n\n    return _possibleConstructorReturn(this, (goodslist.__proto__ || Object.getPrototypeOf(goodslist)).call(this, props));\n  }\n\n  _createClass(goodslist, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var self = this;\n      fetch(\"https://www.macsen318.com\" + \"/api/goods/list\", {\n        credentials: \"include\"\n      }).then(function (res) {\n        if (res.ok) {\n          return res.json();\n        }\n      }).then(function (obj) {\n        _this2.props.doneLoadingAction();\n        _this2.props.listGoodsAction(obj.data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var listGoods = this.props.listGoods;\n      if (this.props.doneLoading) {\n        if (listGoods.length) {\n          return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"ul\",\n            { className: \"app-list-page\" },\n            listGoods.map(function (item, index) {\n              return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Blog_item, { key: item.goodsid, item: item });\n            })\n          );\n        }\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"div\",\n          { style: { padding: 2 + \"rem\", color: \"#333\" } },\n          \"\\u6682\\u65E0\\u6570\\u636E\"\n        );\n      }\n\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"div\",\n        { className: \"app-list-page\" },\n        \"loading...\"\n      );\n    }\n  }]);\n\n  return goodslist;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\nvar Blog_item = function (_React$Component) {\n  _inherits(Blog_item, _React$Component);\n\n  function Blog_item() {\n    _classCallCheck(this, Blog_item);\n\n    return _possibleConstructorReturn(this, (Blog_item.__proto__ || Object.getPrototypeOf(Blog_item)).apply(this, arguments));\n  }\n\n  _createClass(Blog_item, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var item = this.props.item;\n      var category = item.category;\n      var itemEle;\n      var content = item.content ? __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"div\",\n        null,\n        item.content\n      ) : \"\";\n\n      switch (category) {\n        case \"image\":\n          itemEle = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"div\",\n            { className: \"wrap-uri\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"img\", {\n              src: \"//res.macsen318.com\" + item.path,\n              width: item.width / 2\n            })\n          );\n          break;\n        case \"video\":\n          itemEle = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"div\",\n            { className: \"wrap-uri\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"video\", {\n              src: \"//res.macsen318.com\" + item.path,\n              controls: \"controls\",\n              autoPlay: true\n            })\n          );\n          break;\n        case \"note\":\n          itemEle = '';\n          break;\n        default:\n          break;\n      }\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"li\",\n        { className: \"item\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_4_react_router_dom__[\"b\" /* Link */],\n          { to: \"/goods/detail/\" + item.goodsid },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"h2\",\n            null,\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              \"span\",\n              { className: \"avator\" },\n              item.user\n            ),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              \"em\",\n              { className: \"time\" },\n              formatDate(new Date(item._time))\n            )\n          ),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"h3\",\n            null,\n            item.title\n          ),\n          itemEle,\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"p\",\n            { className: \"content\" },\n            filterContent(item.content)\n          ),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"p\",\n            { className: \"more\" },\n            \"\\u67E5\\u770B\\u8BE6\\u60C5\"\n          )\n        )\n      );\n    }\n  }]);\n\n  return Blog_item;\n}(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps, { listGoodsAction: __WEBPACK_IMPORTED_MODULE_3__actions_actions__[\"l\" /* listGoodsAction */], doneLoadingAction: __WEBPACK_IMPORTED_MODULE_3__actions_actions__[\"i\" /* doneLoadingAction */] })(goodslist));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/6.a9d41c1227402ef9b6ab.js","class xhr {\n\tconstructor (opt) {\n\n\t\tthis.method = 'GET';\n\t\tthis.aysc = true;\n\t\tthis.sendData = null;\n\t\tthis.cache = true;\n\t\tif (typeof opt === 'object') {\n\t\t\tObject.assign(this, opt);\n\t\t}\n\t\tthis.url = perfixerURL + this.url\n\t\tthis.send();\n\n\t}\n\tsend() {\n\t    var _xhr = new XMLHttpRequest();\n\t\t_xhr.timeout = 60000;\n\t\tthis.withCredentials && (_xhr.withCredentials = true);\n\t\t_xhr.withCredentials = true\n\t    _xhr.open(this.method, this.url, this.aysc);\n\t\t\n\t    if (this.setHeader) {\n\t    \t_xhr.setRequestHeader(\"Content-Type\", this.setHeader);\t    \n\t    }\n\t\tif (!this.cache) {\n\t\t\t_xhr.setRequestHeader(\"Pragma\", \"no-cache\");\n\t\t\t_xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\t\t}\n\n\t    _xhr.onload = function () {\n\t       if (_xhr.readyState === 4) {\n\t           if (_xhr.status === 200) {\n\t           \t\tvar sucData;\n\t           \t\tif (_xhr.response) {\n\t                \tsucData = JSON.parse(_xhr.response);\n\t           \t\t}\n\t                this.done(sucData);\n\t           }\n\t           else{\n\t               var error = new Error(\"something went wrong\");\n\t               this.faild(error);\n\t           }\n\t       }\n\t    }.bind(this);\n\t    _xhr.onerror = function(error){\n\t       this.faild(error);\n\t    }.bind(this)\n\t    _xhr.send(this.sendData)\n\t}\n\tdone(data) {\n\n\t}\n\tfaild() {\n\n\t}\n}\n\nexport default xhr;\n\n\n// WEBPACK FOOTER //\n// ./script/build/utils/xhr.js","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Immutable = factory());\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32−1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step !== 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      if (o !== o || o === Infinity) {\n        return 0;\n      }\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);\n      return emptyMap().withMutations(function(map ) {\n        for (var i = 0; i < keyValues.length; i += 2) {\n          if (i + 1 >= keyValues.length) {\n            throw new Error('Missing value for key: ' + keyValues[i]);\n          }\n          map.set(keyValues[i], keyValues[i + 1]);\n        }\n      });\n    };\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      if (end === Infinity) {\n        end = originalSize;\n      } else {\n        end = end | 0;\n      }\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      if (this._map && !this._map.has(k)) {\n        var defaultVal = this._defaultValues[k];\n        if (v === defaultVal) {\n          return this;\n        }\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findEntry: function(predicate, context, notSetValue) {\n      var found = notSetValue;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    findLastEntry: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toKeyedSeq().reverse().findKey(predicate, context);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.toKeyedSeq().reverse().keyOf(searchValue);\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.lastKeyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var entry = this.findLastEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    keySeq: function() {\n      return Range(0, this.size);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n  SetIterable.prototype.contains = SetIterable.prototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));\n\n\n// WEBPACK FOOTER //\n// ./node_modules/_immutable@3.8.2@immutable/dist/immutable.js","import React, { Component } from \"react\";\nimport xhr from \"../utils/xhr\";\nimport { connect } from \"react-redux\";\nimport { listGoodsAction, doneLoadingAction } from \"../actions/actions\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Map, List, fromJS, OrderedMap, Seq } from \"immutable\";\nfunction formatDate(now) {\n  var year = now.getFullYear();\n  var month = now.getMonth() + 1;\n  var date = now.getDate();\n  var hour = now.getHours();\n  var minute = now.getMinutes();\n  var second = now.getSeconds();\n  return (\n    year + \"-\" + month + \"-\" + date + \"   \" + hour + \":\" + minute + \":\" + second\n  );\n}\n\nfunction filterContent(words, num) {\n  num = num || 100\n  return words.length > num ? words.slice(0, num) + '...' : words\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    listGoods: state.listGoods,\n    doneLoading: state.doneLoading\n  };\n}\n\nclass goodslist extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    var self = this;\n    fetch(perfixerURL + \"/api/goods/list\", {\n      credentials: \"include\"\n    })\n      .then(function(res) {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then(obj => {\n        this.props.doneLoadingAction();\n        this.props.listGoodsAction(obj.data);\n      });\n  }\n  render() {\n    var listGoods = this.props.listGoods;\n    if (this.props.doneLoading) {\n      if (listGoods.length) {\n        return (\n          <ul className=\"app-list-page\">\n            {listGoods.map((item, index) => (\n              <Blog_item key={item.goodsid} item={item} />\n            ))}\n          </ul>\n        );\n      }\n      return (\n        <div style={{ padding: 2 + \"rem\", color: \"#333\" }}>暂无数据</div>\n      );\n    }\n\n    return <div className=\"app-list-page\">loading...</div>;\n  }\n}\nclass Blog_item extends React.Component {\n  componentDidMount() {}\n  render() {\n    var item = this.props.item;\n    var category = item.category;\n    var itemEle;\n    var content = item.content ? <div>{item.content}</div> : \"\";\n    \n    switch (category) {\n      case \"image\":\n        itemEle = (\n          <div className=\"wrap-uri\">\n            <img\n              src={\"//res.macsen318.com\" + item.path}\n              width={item.width / 2}\n            />\n          </div>\n        );\n        break;\n      case \"video\":\n        itemEle = (\n          <div className=\"wrap-uri\">\n            <video\n              src={\"//res.macsen318.com\" + item.path}\n              controls=\"controls\"\n              autoPlay\n            />\n          </div>\n        );\n        break;\n      case \"note\":\n        itemEle = '';\n        break;\n      default:\n        break;\n    }\n    return (\n      <li className=\"item\">\n        <Link to={\"/goods/detail/\" + item.goodsid}>\n          <h2><span className=\"avator\">{item.user}</span><em className=\"time\">{formatDate(new Date(item._time))}</em></h2>\n          <h3>{item.title}</h3>\n          {itemEle}\n          <p className=\"content\">{filterContent(item.content)}</p>\n          <p className=\"more\">查看详情</p>\n        </Link>\n      </li>\n    );\n  }\n}\nexport default connect(mapStateToProps, { listGoodsAction, doneLoadingAction })(\n  goodslist\n);\n\n\n\n// WEBPACK FOOTER //\n// ./script/build/components/goodslist.js"],"sourceRoot":""}