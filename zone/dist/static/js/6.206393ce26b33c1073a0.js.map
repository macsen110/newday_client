{"version":3,"sources":["webpack:///./script/build/components/communicate.js","webpack:///ws (ignored)"],"names":["mapStateToProps","state","ownProps","showGood","commets","initData","Communicate","props","context","chatList","socket","_self","Manager","require","perfixerURL","on","setState","obj","setChatList","bind","e","console","log","data","ipt","refs","chat_content","value","emit","push","isLogin","length","map","item","index","sendChat","Component","connect"],"mappings":"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","file":"static/js/6.206393ce26b33c1073a0.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Link\n  } from 'react-router-dom';\nimport {connect} from 'react-redux'; \n  function mapStateToProps(state, ownProps) {\n    return {\n        showGood: state.showGood,\n        commets: state.commets,\n        initData: state.initData\n    };\n}\nclass Communicate extends Component {\n\tconstructor(props, context) {  \n        super(props, context);\n        this.state = {\n            chatList: [],\n            socket: null\n        }\n    }\n\tcomponentDidMount() {\n        var _self = this;\n        try {\n            var Manager = require('socket.io-client');\n            var socket = new Manager(perfixerURL);           \n            socket.on('connect', () => _self.setState({socket: socket}))\n            socket.on('chat', (obj) => _self.setChatList.bind(_self)(obj))\n         }\n         catch (e) {\n             console.log(e)\n         }\n\t}\n    sendChat(data) {\n        //loading.start()\n        var _self = this;\n        var ipt = _self.refs.chat_content;\n        _self.setChatList.bind(_self)({data: ipt.value})\n        _self.state.socket && _self.state.socket.emit('chat', {data: ipt.value})\n    }\n    setChatList(obj) {\n        var _self = this;\n        var chatList = _self.state.chatList;\n        chatList.push(obj)\n        _self.setState({\n            chatList: chatList\n        })\n    }\n    render() {\n        var state = this.state; \n        var isLogin = null;\n        return (\n            <div className=\"app-home-page\">\n                <div className=\"chat-container\">\n                    {(()=>{\n                        if(state.chatList.length) {\n                            return (\n                                <ul className=\"chat-list\">\n                                    {state.chatList.map((item, index) => {\n                                        return (<li key={index} className=\"item\">{item.data}</li>)\n                                    })}\n                                </ul>\n                            )\n                        }\n                    })()}\n                    <div className=\"chat-box\" ref=\"chat_box\"></div>\n                    <input type=\"text\" ref=\"chat_content\" className=\"ipt\"/>\n                    <button className=\"btn\" onClick={() => this.sendChat()} ref=\"send_chat_btn\">submit</button>\n                    {this.props.initData.isLogin ? <Link to=\"/user/logout\">注销账号</Link> : ''}\n                </div>\n            </div>\n        )\n    }\n    \n};\nexport default connect(mapStateToProps, {})(Communicate);\n","/* (ignored) */"],"sourceRoot":""}