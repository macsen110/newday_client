{"version":3,"sources":["webpack:///ws (ignored)","webpack:///./script/build/components/communicate.js"],"names":["mapStateToProps","state","ownProps","showGood","commets","initData","Communicate","props","context","chatList","socket","_self","Manager","require","perfixerURL","on","setState","obj","setChatList","bind","e","console","log","data","ipt","refs","chat_content","value","emit","push","isLogin","length","map","item","index","sendChat","Component","connect"],"mappings":"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","file":"static/js/7.9c45b3fb051047998890.js","sourcesContent":["/* (ignored) */","import React, { Component } from 'react';\nimport {\n    Link\n  } from 'react-router-dom';\nimport {connect} from 'react-redux'; \n  function mapStateToProps(state, ownProps) {\n    return {\n        showGood: state.showGood,\n        commets: state.commets,\n        initData: state.initData\n    };\n}\nclass Communicate extends Component {\n\tconstructor(props, context) {  \n        super(props, context);\n        this.state = {\n            chatList: [],\n            socket: null\n        }\n    }\n\tcomponentDidMount() {\n        var _self = this;\n        try {\n            var Manager = require('socket.io-client');\n            var socket = new Manager(perfixerURL);           \n            socket.on('connect', () => _self.setState({socket: socket}))\n            socket.on('chat', (obj) => _self.setChatList.bind(_self)(obj))\n         }\n         catch (e) {\n             console.log(e)\n         }\n\t}\n    sendChat(data) {\n        //loading.start()\n        var _self = this;\n        var ipt = _self.refs.chat_content;\n        _self.setChatList.bind(_self)({data: ipt.value})\n        _self.state.socket && _self.state.socket.emit('chat', {data: ipt.value})\n    }\n    setChatList(obj) {\n        var _self = this;\n        var chatList = _self.state.chatList;\n        chatList.push(obj)\n        _self.setState({\n            chatList: chatList\n        })\n    }\n    render() {\n        var state = this.state; \n        var isLogin = null;\n        return (\n            <div className=\"app-home-page\">\n                <div className=\"chat-container\">\n                    {(()=>{\n                        if(state.chatList.length) {\n                            return (\n                                <ul className=\"chat-list\">\n                                    {state.chatList.map((item, index) => {\n                                        return (<li key={index} className=\"item\">{item.data}</li>)\n                                    })}\n                                </ul>\n                            )\n                        }\n                    })()}\n                    <div className=\"chat-box\" ref=\"chat_box\"></div>\n                    <input type=\"text\" ref=\"chat_content\" className=\"ipt\"/>\n                    <button className=\"btn\" onClick={() => this.sendChat()} ref=\"send_chat_btn\">submit</button>\n                    {this.props.initData.isLogin ? <Link to=\"/user/logout\">注销账号</Link> : ''}\n                </div>\n            </div>\n        )\n    }\n    \n};\nexport default connect(mapStateToProps, {})(Communicate);\n"],"sourceRoot":""}