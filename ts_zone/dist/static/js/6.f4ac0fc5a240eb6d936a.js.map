{"version":3,"sources":["webpack:///./script/build/components/app.tsx","webpack:///./script/build/reducers/init.ts","webpack:///./script/build/actions/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,mCAA+B;AAC/B,iDAE0B;AAC1B,qCAAsC;AACtC,wCAAwC;AAEpC,iCAAU,EACV,2BAAS,CACJ;AACT,SAAS,YAAY;IACjB,OAAO,CACH,6BAAK,SAAS,EAAC,uBAAuB;QAClC,gCAAQ,SAAS,EAAC,QAAQ;YACtB,4BAAI,SAAS,EAAC,cAAc;gBACxB,oBAAC,GAAG,IAAC,KAAK,QAAC,EAAE,EAAC,GAAG,mBAAS;gBAC1B,oBAAC,GAAG,IAAC,EAAE,EAAC,aAAa,mBAAS;gBAC9B,oBAAC,GAAG,IAAC,EAAE,EAAC,eAAe,mBAAS;gBAChC,oBAAC,GAAG,IAAC,EAAE,EAAC,aAAa,mBAAS,CAC7B,CACA,CACP,CACT;AACL,CAAC;AACD,SAAS,WAAW;IAChB,OAAO,CACH,6BAAK,SAAS,EAAC,uBAAuB;QAClC,gCAAQ,SAAS,EAAC,QAAQ;YACtB,4BAAI,SAAS,EAAC,cAAc;gBACxB,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG,mBAAS;gBACpB,oBAAC,GAAG,IAAC,EAAE,EAAC,aAAa,mBAAS;gBAC9B,oBAAC,GAAG,IAAC,EAAE,EAAC,eAAe,mBAAS;gBAChC,oBAAC,GAAG,IAAC,EAAE,EAAC,cAAc,aAAQ,CAC7B,CACA,CACP,CACT;AAEL,CAAC;AACD,SAAS,GAAG,CAAC,KAAU;IACnB,OAAO,CACH,4BAAI,SAAS,EAAC,MAAM;QAAC,oBAAC,0BAAO,eAAM,KAAK,IAAE,eAAe,EAAC,QAAQ,IAAG,CAAK,CAC7E;AACL,CAAC;AAED,YAAY;AACZ,SAAS,GAAG;IACF,uDAA2D,EAA1D,aAAK,EAAE,gBAAmD;IACjE,IAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;IAClC,SAAS,CAAC;QACN,aAAa;QACb,KAAK,CAAC,2BAAW,GAAC,WAAW,EAAE;YAC3B,WAAW,EAAE,SAAS;SACzB,CAAC;YACF,aAAa;aACZ,IAAI,CAAC,UAAC,GAAG;YACN,IAAI,GAAG,CAAC,EAAE;gBAAE,OAAO,GAAG,CAAC,IAAI,EAAE;QACjC,CAAC,CAAC;aACD,IAAI,CAAC,cAAM,eAAQ,CAAC,EAAE,IAAI,EAAE,eAAK,EAAE,CAAC,EAAzB,CAAyB,CAAC;aACrC,KAAK,CAAC,cAAM,eAAQ,CAAC,EAAE,IAAI,EAAE,gBAAM,EAAE,CAAC,EAA1B,CAA0B,CAAC;IAC5C,CAAC,EAAE,EAAE,CAAC;IACN,IAAI,CAAC,WAAW;QAAE,OAAO,oBAAC,YAAY,OAAG;IACzC,OAAO,oBAAC,WAAW,OAAG;AAC1B,CAAC;AAAA,CAAC;AACF,kBAAe,GAAG,CAAC;;;;;;;;;;;AC1DnB,IAAM,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;AACxC,SAAwB,OAAO,CAAC,KAAgB,EAAE,MAAkB;IAClE,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,OAAO;YACV,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC;QACzB,KAAK,QAAQ;YACX,OAAO,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC;QAC3B;YACE,OAAO,YAAY,CAAC;KACvB;AACH,CAAC;AATD,0BASC;;;;;;;;;;;AChBY,aAAK,GAAG,OAAO;AACf,cAAM,GAAG,QAAQ","file":"static/js/6.f4ac0fc5a240eb6d936a.js","sourcesContent":["import * as React from 'react';\nimport {\n    NavLink\n} from 'react-router-dom';\nimport reducer from '../reducers/init'\nimport {LOGIN, LOGOUT} from '../actions'\nconst {\n    useReducer,\n    useEffect\n} = React\nfunction LogoutHeader() {\n    return (\n        <div className=\"wrap-header-container\">\n            <header className=\"header\">\n                <ul className=\"app-nav-list\">\n                    <Tab exact to=\"/\">首页</Tab>\n                    <Tab to=\"/goods/list\">发现</Tab>\n                    <Tab to=\"/goods/upload\">上传</Tab>\n                    <Tab to=\"/user/login\">登录</Tab>\n                </ul>\n            </header>\n        </div>\n    )\n}\nfunction LoginHeader() {\n    return (\n        <div className=\"wrap-header-container\">\n            <header className=\"header\">\n                <ul className=\"app-nav-list\">\n                    <Tab to=\"/\">首页</Tab>\n                    <Tab to=\"/goods/list\">发现</Tab>\n                    <Tab to=\"/goods/upload\">上传</Tab>\n                    <Tab to=\"/communicate\">我</Tab>\n                </ul>\n            </header>\n        </div>\n    )\n\n}\nfunction Tab(props: any) {\n    return (\n        <li className=\"item\"><NavLink  {...props} activeClassName=\"active\" /></li>\n    )\n}\n\n//home views\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, { isLogin: false })\n    const loginStatus = state.isLogin;\n    useEffect(() => {\n        // @ts-ignore\n        fetch(perfixerURL+\"/api/home\", {\n            credentials: 'include'\n        })\n        // @ts-ignore\n        .then((res) => {\n            if (res.ok) return res.json()\n        })\n        .then(() => dispatch({ type: LOGIN }))\n        .catch(() => dispatch({ type: LOGOUT }))\n    }, [])\n    if (!loginStatus) return <LogoutHeader />\n    return <LoginHeader />\n};\nexport default App;\n","type StateType = {\n  isLogin: boolean\n}\ntype ActionType = {\n  type: 'LOGOUT' | 'LOGIN'\n}\nconst initialState = { isLogin: false };\nexport default function reducer(state: StateType, action: ActionType) {\n  switch (action.type) {\n    case 'LOGIN':\n      return { isLogin: true}\n    case 'LOGOUT':\n      return { isLogin: false};\n    default:\n      return initialState;\n  }\n}","export const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'"],"sourceRoot":""}