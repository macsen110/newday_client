{"version":3,"sources":["webpack:///./script/build/actions/index.ts","webpack:///./script/build/reducers/showGoodTs.ts","webpack:///./script/build/reducers/commetsTs.ts","webpack:///./script/build/components/goodsdetail.tsx","webpack:///./script/build/utils/xhr.ts"],"names":["__webpack_require__","d","__webpack_exports__","LOGIN","LOGOUT","LISTGOODS","SHOWGOOD","POSTCOMMET","DELETECOMMET","LISTCOMMETS","showGood","state","action","type","actions","value","commetsTs_commets","push","slice","index","i","length","_id","splice","useReducer","_react_16_8_6_react","useEffect","useRef","unLoginCode","Blog_item","props","itemEle","item","category","src","path","width","autoPlay","url","content","className","Commets","commets","goodsid","map","CommetItem","C_content","key","C_id","InputContainer","delCommet","e","Promise","res","rej","xhr","method","done","obj","code","Object","external_YAO_M_UI_","msg","_delCommet","target","parentNode","dataset","id","data-id","onClick","wrap_comment","ref","commentData","commentEle","current","JSON","stringify","fetch","credentials","headers","Content-Type","body","then","ok","json","_a","dispatch","_b","dispatchCommets","files","match","params","resolve","reject","callData","faild","error","Error","detail","title","opt","this","aysc","sendData","cache","assign","send","prototype","_this","_xhr","XMLHttpRequest","timeout","withCredentials","open","setHeader","setRequestHeader","onload","readyState","status","sucData","response","parse","onerror"],"mappings":"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","file":"static/js/3.3a19b418363909a9b0a3.js","sourcesContent":["export const LOGIN = 'LOGIN'\nexport const LOGOUT = 'LOGOUT'\nexport const LISTGOODS = 'LISTGOODS';\nexport const SHOWGOOD = 'SHOWGOOD';\nexport const POSTCOMMET = 'POSTCOMMET';\nexport const DELETECOMMET = 'DELETECOMMET';\nexport const LISTCOMMETS = 'LISTCOMMETS';\nexport const DONELOADING = 'DONELOADING';","import {SHOWGOOD} from '../actions';\r\ntype actionType = {\r\n\ttype: string,\r\n\tvalue: {}\r\n}\r\nexport default function showGood(state:any,action:actionType) {\r\n\tswitch(action.type) {\r\n\t\tcase SHOWGOOD:\r\n\t\t\treturn action.value;\r\n\t\tdefault:\r\n\t\t\treturn state \r\n\t}\r\n} ","import {POSTCOMMET, DELETECOMMET, LISTCOMMETS} from '../actions';\r\ntype actionType = {\r\n\ttype: string,\r\n\tvalue: any\r\n}\r\nexport default function commets(state:any,action:actionType) {\r\n\tswitch(action.type) {\r\n\t\tcase POSTCOMMET:\r\n\t\t\tstate.push(action.value);\r\n\t\t\treturn [...state];\r\n\t\tcase LISTCOMMETS:\r\n\t\t\treturn action.value\r\n\t\tcase DELETECOMMET:\r\n\t\t\tlet index;\r\n\t\t\tfor (let i =0; i <state.length; i++) {\r\n\t\t\t\tif (state[i]._id === action.value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tstate.splice(index, 1)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn [...state]\r\n\t\tdefault:\r\n\t\t\treturn [...state];\r\n\t}\r\n}","import * as React from 'react';\nimport xhr from '../utils/xhr';\nimport { SHOWGOOD, POSTCOMMET, DELETECOMMET, LISTCOMMETS } from '../actions';\nimport { showPrompt } from 'yao-m-ui';\nimport reducer from \"../reducers/showGoodTs\"\nimport reduceCommets from '../reducers/commetsTs'\nconst {\n    useReducer,\n    useEffect,\n    useRef\n} = React\nconst unLoginCode = '00002';\nfunction _fetchGoods(id) {\n    return new Promise(function (resolve, reject) {\n        new xhr({\n            url: '/api/goods/detail/' + id,\n            done: function (callData) {\n                resolve(callData)\n            },\n            faild: function () {\n                var error = new Error('something wrong')\n                reject(error)\n            }\n\n        })\n\n    })\n}\nfunction _delCommet(C_id, goodsid) {\n    return new Promise((res, rej) => {\n        new xhr({\n            url: '/api/comments/' + goodsid + '/' + C_id,\n            method: 'DELETE',\n            done: (obj) => {\n                if (obj.code === 0) res(+C_id)\n                if (obj.code === unLoginCode) return showPrompt({ msg: obj.msg })\n                if (obj.code !== 0) return showPrompt({ msg: obj.msg })\n            }\n        })\n    })\n\n}\nfunction _submitCommet(goodsid, content) {\n    let commentData = JSON.stringify({\n        goodsid,\n        content\n    });\n    // @ts-ignore\n    return fetch(perfixerURL + '/api/comments/', {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: commentData\n    }).then(function (res: any) {\n        if (res.ok) {\n            return res.json()\n        }\n    }).then((obj) => {\n        if (obj.code === unLoginCode) return showPrompt({ msg: obj.msg })\n        if (obj.code !== 0) return showPrompt({ msg: obj.msg })\n    })\n}\n\nfunction _delGoods(id) {\n    // @ts-ignore\n    return fetch(perfixerURL + '/api/goods/delete/' + id, {\n        method: 'DELETE',\n        credentials: \"include\"\n    }).then(function (res: any) {\n        if (res.ok) {\n            return res.json()\n        }\n    }).then((obj) => {\n        return obj;\n        //if (obj.code === unLoginCode) return showPrompt({ msg: obj.msg, cb: () => props.history.push('/user/login') })\n        //if (obj.code == 0) {\n        //props.history.push('/goods/list')\n        //}\n    })\n}\nfunction GoodsDetail(props: any) {\n    const [state, dispatch] = useReducer(reducer, {})\n    const [commets, dispatchCommets] = useReducer(reduceCommets, [])\n    let files = state.files || '';\n    useEffect(() => {\n        _fetchGoods(props.match.params.id).then((obj: any) => {\n            dispatch({ type: SHOWGOOD, value: obj.detail })\n            dispatchCommets({ type: LISTCOMMETS, value: obj.commets })\n        })\n    }, [])\n    const deleteGoods = () => {\n        _delGoods(props.match.params.id)\n\n    }\n    if (state.id) {\n        return (\n            <div className=\"app-detail-page\">\n                <p className=\"page-title\">{state.title}</p>\n                {\n                    files.length > 0 && (<ul className=\"uri-list\">\n                        {files.map((item, index) => <Blog_item key={index} item={item} category={state.category} />)}\n                    </ul>)\n                }\n                {\n                    state.content != '' && (<p className=\"content\">{state.content}</p>)\n                }\n                <Commets commets={commets} goodsid={state.id}/>\n            </div>\n        )\n    }\n    return (<div>{props.match.params.id}</div>)\n}\nfunction Blog_item(props) {\n    var item = props.item;\n    var category = props.category;\n    var itemEle;\n    switch (category) {\n        case 'image':\n            itemEle = <img src={'//res.macsen318.com' + item.path} width={item.width} />;\n            break;\n        case 'video':\n            itemEle = <video src={'//res.macsen318.com' + item.path} autoPlay></video>;\n            break;\n        case 'note':\n            if (item.url) {\n                itemEle = <div><p>{item.content}</p><p><img src={'//res.macsen318.com' + item.path} width={item.width / 2} /></p></div>;\n            }\n            else {\n                itemEle = <p>{item.content}</p>;\n            }\n            break;\n        default:\n            break\n\n    }\n    return (<li className=\"item\">{itemEle}</li>)\n\n}\n\n\n\n\nfunction Commets(props: any) {\n    let { commets, goodsid } = props\n    if (commets.length) {\n        return (\n            <div className=\"commets-container\">\n                <ul className=\"commets-list\">\n                {commets.map((item, index) => <CommetItem goodsid={goodsid} C_content={item.C_content}  key={index} C_id={item._id} />)}\n                </ul>\n                <InputContainer goodsid={goodsid} />\n            </div>\n        )\n    }\n    return (\n        <div className=\"commets-contain\">\n            <InputContainer goodsid={goodsid} />\n        </div>\n    )\n\n}\nfunction CommetItem(props) {\n    const {\n        C_content, \n        C_id,\n        goodsid\n    } = props\n    const delCommet = (e) => {\n        var item = e.target.parentNode;\n        var C_id = item.dataset.id;\n        _delCommet(C_id, goodsid)\n    }\n    return (\n        <li className=\"item\" data-id={C_id}>\n            <span className=\"con\">{'游客评论: ' + C_content}</span>\n            <span className=\"del\" onClick={(e) => delCommet(e)}>删除</span>\n        </li>\n    )\n}\nfunction InputContainer(props) {\n    let wrap_comment = useRef<HTMLTextAreaElement>(null);\n    const submitCommet = () => {\n        let commentEle = wrap_comment.current;\n        _submitCommet(props.goodsid, commentEle ? commentEle.value : '')\n    }\n    return (\n        <div  className=\"input-container\">\n            <textarea className=\"ipt\" ref={wrap_comment} />\n            <p><button onClick={submitCommet} className=\"btn\">提交评论</button></p>\n        </div>\n    )\n}\n\nexport default GoodsDetail\n\n\n","class xhr {\n\tmethod: string;\n\taysc: boolean;\n\tsendData: any;\n\tcache: boolean;\n\turl: string;\n\tsetHeader: any;\n\tfaild: Function;\n\twithCredentials: true;\n\tdone: Function;\n\tconstructor(opt: any) {\n\t\tthis.method = 'GET';\n\t\tthis.aysc = true;\n\t\tthis.sendData = null;\n\t\tthis.cache = true;\n\t\tif (typeof opt === 'object') {\n\t\t\tObject.assign(this, opt);\n\t\t}\n\t\t//@ts-ignore\n\t\tthis.url = perfixerURL + this.url\n\t\tthis.send();\n\n\t}\n\tsend() {\n\t\tvar _xhr = new XMLHttpRequest();\n\t\t_xhr.timeout = 60000;\n\t\tthis.withCredentials && (_xhr.withCredentials = true);\n\t\t_xhr.withCredentials = true\n\t\t_xhr.open(this.method, this.url, this.aysc);\n\n\t\tif (this.setHeader) {\n\t\t\t_xhr.setRequestHeader(\"Content-Type\", this.setHeader);\n\t\t}\n\t\tif (!this.cache) {\n\t\t\t_xhr.setRequestHeader(\"Pragma\", \"no-cache\");\n\t\t\t_xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\t\t}\n\n\t\t_xhr.onload = () => {\n\t\t\tif (_xhr.readyState === 4) {\n\t\t\t\tif (_xhr.status === 200) {\n\t\t\t\t\tvar sucData;\n\t\t\t\t\tif (_xhr.response) {\n\t\t\t\t\t\tsucData = JSON.parse(_xhr.response);\n\t\t\t\t\t}\n\t\t\t\t\tthis.done(sucData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar error = new Error(\"something went wrong\");\n\t\t\t\t\tthis.faild(error);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t_xhr.onerror = (error) => {\n\t\t\tthis.faild(error);\n\t\t}\n\t\t_xhr.send(this.sendData)\n\t}\n}\n\nexport default xhr;"],"sourceRoot":""}