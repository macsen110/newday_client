{"remainingRequest":"/Users/macsen/Desktop/rltx-webpack/src/common/formHelper.js","dependencies":[{"path":"/Users/macsen/Desktop/rltx-webpack/src/common/formHelper.js","mtime":1511527698000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_babel-loader@6.2.10@babel-loader/lib/index.js","mtime":1481808750000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_cache-loader@1.2.0@cache-loader/dist/cjs.js","mtime":1510929699000}],"contextDependencies":[],"result":["import * as utils from '../../api/Utils';\n\nconst axios = require('axios');\n\nfunction isArray(val) {\n  if (typeof Array.isArray === 'function') {\n    return Array.isArray(val);\n  }\n  return Object.prototype.toString.call(val) === '[object Array]';\n}\n\nfunction merge(vueInstance, domainObject, fieldConfig, data) {\n  let counter = 0;\n  Object.keys(data).forEach((key) => {\n    if (isArray(data[key])) {\n      vueInstance.$set(domainObject, key, data[key]);\n    } else {\n      vueInstance.$set(domainObject, key, utils.NumtoStr(data[key]));\n    }\n    counter += 1;\n  });\n  fieldConfig.field.forEach((field) => {\n    field.extraParams.forEach((property) => {\n      if (!(property.field in domainObject)) {\n        if (property.default) {\n          vueInstance.$set(domainObject, property.field, property.default);\n        } else {\n          vueInstance.$set(domainObject, property.field, null);\n        }\n        counter += 1;\n      }\n    });\n  });\n  return counter;\n}\n\nfunction request(requestUrl) {\n  return axios({\n    method: 'get',\n    url: requestUrl,\n    headers: { 'Accept': 'application/json' }\n  });\n}\n\nfunction initForAdd(vueInstance, domainObject, fieldConfigUrl, callback) {\n  const localStorage = window.localStorage;\n  let counter = 0;\n  axios.all([request(fieldConfigUrl)])\n    .then(axios.spread((eleConfig) => {\n      const eleDefine = JSON.parse(localStorage.getItem('eleDefine')),\n        eleInfo = JSON.parse(localStorage.getItem('eleInfo')),\n        fieldConfig = utils.getParam(eleConfig, eleDefine, eleInfo);\n      fieldConfig.field.forEach((field) => {\n        field.extraParams.forEach((property) => {\n          if (property.default) {\n            vueInstance.$set(domainObject, property.field, property.default);\n          } else {\n            vueInstance.$set(domainObject, property.field, null);\n          }\n          counter += 1;\n        });\n      });\n      callback(fieldConfig, counter);\n    }));\n}\n\nfunction initForEdit(vueInstance, domainObject, fieldConfigUrl, data, callback) {\n  const localStorage = window.localStorage;\n  axios.all([request(fieldConfigUrl)])\n    .then(axios.spread((eleConfig) => {\n      const eleDefine = JSON.parse(localStorage.getItem('eleDefine')),\n        eleInfo = JSON.parse(localStorage.getItem('eleInfo')),\n        fieldConfig = utils.getParam(eleConfig, eleDefine, eleInfo),\n        counter = merge(vueInstance, domainObject, fieldConfig, data);\n      callback(fieldConfig, counter);\n    }));\n}\n\nexport { initForAdd, initForEdit };\n",null]}