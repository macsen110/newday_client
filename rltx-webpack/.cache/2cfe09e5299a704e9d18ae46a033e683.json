{"remainingRequest":"/Users/macsen/Desktop/rltx-webpack/src/menu/menu.js","dependencies":[{"path":"/Users/macsen/Desktop/rltx-webpack/src/menu/menu.js","mtime":1511527692000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_babel-loader@6.2.10@babel-loader/lib/index.js","mtime":1481808750000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_cache-loader@1.2.0@cache-loader/dist/cjs.js","mtime":1510929699000}],"contextDependencies":[],"result":["/**\n * menu.js\n * Created by zhangyc on 17/6/7.\n */\n\nimport Vue from 'vue';\nimport { Message } from 'element-ui';\nimport { getMenu } from '../../api/menu';\nimport { addClass, removeClass, toggleClass, hasClass } from '../../api/classUtil';\nimport menuFrame from './menu.vue';\nimport * as loginService from '../../api/LoginService';\nimport ApiConst from '../../api/ApiConst';\n\nVue.prototype.$message = Message;\n\n/* eslint-disable no-new */\n/* eslint-disable no-unused-vars */\nconst userInfo = localStorage.getItem('userInfo'),\n  vm = new Vue({\n    el: '#app',\n    template: '<menuFrame />',\n    components: { menuFrame },\n    computed: {},\n    mounted() {\n    }\n  }),\n  orgConfigUrl = ApiConst.apiOrgConfigDomain,\n  defineUrl = `${orgConfigUrl}/element_type/define`,\n  typeUrl = `${orgConfigUrl}/element_type/info`,\n  axios = require('axios');\n\nwindow.rns = {};\n\nif (userInfo) {\n  const userInfoObj = JSON.parse(userInfo),\n    orgFullName = userInfoObj.orgFullName,\n    userFullName = userInfoObj.userFullName || userInfoObj.loginAccount;\n  document.querySelector('.org-name').innerHTML = orgFullName;\n  document.querySelector('.user-role').innerHTML = userFullName;\n} else {\n  window.location.href = '/login/login.html';\n}\n\n\n// 展示tab和iframe\nfunction selectTabAndIframe(link) {\n  const tabList = document.getElementById('tabList').getElementsByTagName('li'),\n    iframes = document.getElementById('iframeContent').getElementsByTagName('iframe'),\n    navItemLiList = document.querySelectorAll('.nav-list-itemli');\n  for (let i = tabList.length - 1; i >= 0; i--) {\n    if (tabList[i].getAttribute('data-url') === link) {\n      addClass(tabList[i], 'active');\n    } else {\n      removeClass(tabList[i], 'active');\n    }\n  }\n  for (let k = iframes.length - 1; k >= 0; k--) {\n    if (iframes[k].getAttribute('data-url') === link) {\n      removeClass(iframes[k], 'hide');\n    } else {\n      addClass(iframes[k], 'hide');\n    }\n  }\n  for (let j = navItemLiList.length - 1; j >= 0; j--) {\n    if (navItemLiList[j].getAttribute('data-link') === link) {\n      addClass(navItemLiList[j], 'active');\n    } else {\n      removeClass(navItemLiList[j], 'active');\n    }\n  }\n}\n\n// 获取上部和左侧的列表\ngetMenu((response, error) => {\n  const JtopNavList = document.getElementById('J_topNavList'),\n    Jtemplate = document.getElementById('J_template'),\n    tagName = 'J_tagBox',\n    res = response.content;\n  let hideList = null,\n    firstList = null;\n  for (let k = 0, len = res.length; k < len; k++) {\n    // 顶级菜单\n    if (!res[k].parentResourceCode) {\n      // 生成列表头部列表\n      const span = document.createElement('li'),\n        TagBox = document.createElement('div');\n      span.className = 'topTab';\n      span.innerHTML = res[k].resourceName;\n      span.setAttribute('code', res[k].code);\n      JtopNavList.appendChild(span);\n      // 生成虚拟模板\n      // TagBox.id = tagName + res[k].resourceCode;\n      TagBox.id = tagName + res[k].code;\n      TagBox.setAttribute('nodelevel', '1');\n      TagBox.className = 'tabBox hide';\n      Jtemplate.appendChild(TagBox);\n      // 二三级菜单\n    } else {\n      const queryString = tagName + res[k].parentResourceCode,\n        appendUl = document.createElement('ul'),\n        appendUlLi = document.createElement('li'),\n        appendUlLiA = document.createElement('a'),\n        appendUlLiSpan = document.createElement('span');\n      let targetBox = document.getElementById(queryString),\n        nodelevel = null;\n      nodelevel = targetBox.getAttribute('nodelevel');\n      appendUl.className = 'nav-list';\n      appendUl.id = tagName + res[k].code;\n      appendUlLiSpan.innerHTML = res[k].resourceName;\n      // 二层结构\n      if (nodelevel === '1') {\n        appendUlLiSpan.className = 'nav-name';\n      } else {\n        appendUlLiSpan.className = 'nav-list-itemli';\n        targetBox = targetBox.getElementsByTagName('li')[0];\n      }\n      if (res[k].path && res[k].resourceName) {\n        const index = res[k].path.indexOf('?target=_blank');\n        if (index > -1) {\n          appendUlLiA.setAttribute('href', res[k].path.slice(0, index));\n          appendUlLiA.setAttribute('title', res[k].resourceName);\n          appendUlLiA.setAttribute('target', '_blank');\n          appendUlLiA.appendChild(appendUlLiSpan);\n          appendUlLi.appendChild(appendUlLiA);\n        } else {\n          appendUlLi.setAttribute('data-link', res[k].path);\n          appendUlLi.setAttribute('data-title', res[k].resourceName);\n          appendUlLi.appendChild(appendUlLiSpan);\n        }\n      } else {\n        appendUlLi.appendChild(appendUlLiSpan);\n      }\n      appendUl.appendChild(appendUlLi);\n      targetBox.appendChild(appendUl);\n    }\n  }\n  hideList = document.querySelectorAll('.tabBox');\n  firstList = hideList[0];\n  removeClass(firstList, 'hide');\n  addClass(document.querySelector('.topTab'), 'active');\n  // console.log(error);\n});\n\n// 收缩左侧三级菜单\ndocument.querySelector('#sideList').addEventListener('click', (event) => {\n  const target = event.target;\n  if (hasClass(target, 'nav-name')) {\n    target.parentNode.querySelectorAll('ul').forEach((item) => {\n      toggleClass(item, 'hide');\n    });\n  }\n});\n\n// 计算tab宽度\nfunction calTab() {\n  const wrapWidth = document.querySelector('.tab-wrap').offsetWidth,\n    element = document.querySelectorAll('#tabList li');\n  let tabWidth = 0;\n  Object.keys(element).forEach((index) => {\n    const liWidth = element[index].offsetWidth + 2;\n    tabWidth += liWidth;\n  });\n  // console.log(wrapWidth, tabWidth);\n  document.querySelector('#tabList').style.width = `${tabWidth}px`;\n  if (tabWidth > wrapWidth) {\n    // console.log('success');\n    addClass(document.querySelector('.tab-wrap'), 'is-scroll');\n    const scrollWidth = document.querySelector('.tab-scroll').offsetWidth,\n      x = tabWidth - scrollWidth;\n    document.querySelector('#tabList').style.marginLeft = `${-x}px`;\n  } else {\n    removeClass(document.querySelector('.tab-wrap'), 'is-scroll');\n    document.querySelector('#tabList').removeAttribute('style');\n  }\n}\n\ncalTab();\n\n// 往前翻页\nfunction preview() {\n  const scrollWidth = document.querySelector('.tab-scroll').offsetWidth,\n    ulWidth = parseInt(document.querySelector('#tabList').style.width, 10);\n  let x = parseInt(document.querySelector('#tabList').style.marginLeft, 10);\n  // console.log(scrollWidth, ulWidth, x);\n  if (x < 0) {\n    x += 100;\n    if (x > 0) {\n      x = 0;\n      document.querySelector('#tabList').style.marginLeft = `${x}px`;\n    } else {\n      document.querySelector('#tabList').style.marginLeft = `${x}px`;\n    }\n  } else {\n    return false;\n  }\n}\n\ndocument.querySelector('.preview').addEventListener('click', preview);\n\n// 往后翻页\nfunction next() {\n  const scrollWidth = document.querySelector('.tab-scroll').offsetWidth,\n    ulWidth = parseInt(document.querySelector('#tabList').style.width, 10),\n    overWidth = ulWidth - scrollWidth;\n  let x = parseInt(document.querySelector('#tabList').style.marginLeft, 10);\n  // console.log(scrollWidth, ulWidth, x);\n  if (x > -overWidth) {\n    x -= 100;\n    if (x < -overWidth) {\n      x = -overWidth;\n      document.querySelector('#tabList').style.marginLeft = `${x}px`;\n    } else {\n      document.querySelector('#tabList').style.marginLeft = `${x}px`;\n    }\n  } else {\n    return false;\n  }\n}\n\ndocument.querySelector('.next').addEventListener('click', next);\n\n// 收缩左侧菜单栏\ndocument.querySelector('#hideSide').onclick = () => {\n  toggleClass(document.querySelector('.content'), 'collapse');\n};\n\n// 全屏显示页面\ndocument.querySelector('#fullScreen').onclick = () => {\n  const body = document.querySelector('body'),\n    self = document.querySelector('#fullScreen');\n  toggleClass(body, 'fullscreen');\n  if (hasClass(body, 'fullscreen')) {\n    self.innerHTML = '退出全屏';\n  } else {\n    self.innerHTML = '全屏';\n  }\n  calTab();\n};\n\ndocument.addEventListener('click', (event) => {\n  // 打开iframe\n  const target = event.target,\n    // 是否存在data-link\n    targetLink = target.getAttribute('data-link') || target.parentNode.getAttribute('data-link') || '',\n    targetTitle = target.getAttribute('data-title') || target.parentNode.getAttribute('data-title') || '',\n    iframeContent = document.querySelector('#iframeContent');\n  // 头部一级菜单\n  if (target.className.indexOf('topTab') > -1) {\n    const code = target.getAttribute('code'),\n      sideBox = document.querySelectorAll('.tabBox'),\n      targetName = '#J_tagBox',\n      queryString = targetName + code,\n      targetBox = document.querySelector(queryString),\n      topTabList = document.querySelectorAll('.topTab'),\n      thisName = target.innerHTML;\n    document.getElementById('navTitleName').innerHTML = thisName;\n    // topTabList.forEach((element) => {\n    //   removeClass(element, 'active');\n    // });\n    for (let i = 0; i < topTabList.length; i += 1) {\n      removeClass(topTabList[i], 'active');\n    }\n    addClass(target, 'active');\n    // sideBox.forEach((element) => {\n    //   addClass(element, 'hide');\n    // });\n    for (let i = 0; i < sideBox.length; i += 1) {\n      addClass(sideBox[i], 'hide');\n    }\n\n    removeClass(targetBox, 'hide');\n  }\n\n  // 查看是否含有data-link和data-title\n  if (targetLink && targetTitle) {\n    if (targetLink === 'undefined') {\n      return false;\n    }\n    const iframeList = iframeContent.getElementsByTagName('iframe'),\n      newIframe = document.createElement('iframe'),\n      tabList = document.querySelector('#tabList');\n    // 是否已经存在相同iframe\n    let sameFlag = false;\n    for (let i = iframeList.length - 1; i >= 0; i--) {\n      if (iframeList[i].getAttribute('data-url') === targetLink) {\n        // 存在相同的iframe\n        removeClass(iframeList[i], 'hide');\n        sameFlag = true;\n        break;\n      }\n    }\n    if (!sameFlag) {\n      const tab = document.createElement('li'),\n        span1 = document.createElement('span'),\n        span2 = document.createElement('span');\n      // tab.className = 'col-md-3 mark';\n      tab.setAttribute('data-url', targetLink);\n      tab.className = 'page-tab-item';\n      span1.className = 'ellipsis page-tab-ellipsis-name';\n      span1.innerHTML = targetTitle;\n      span2.className = 'page-tab-close';\n      span2.innerHTML = 'x';\n      tab.appendChild(span1);\n      tab.appendChild(span2);\n      tabList.appendChild(tab);\n      for (let j = iframeList.length - 1; j >= 0; j--) {\n        removeClass(iframeList[j], 'active');\n      }\n      newIframe.src = targetLink;\n      newIframe.setAttribute('data-url', targetLink);\n      newIframe.className = 'iframe';\n      iframeContent.appendChild(newIframe);\n      calTab();\n    }\n\n    // 显示选中的toptab和iframe\n    selectTabAndIframe(targetLink);\n  }\n\n  // tab删除\n  if (target.className.indexOf('page-tab-close') > -1) {\n    // 获取删除的tab，tab对应的url，iframes的列表\n    const parentNode = target.parentNode,\n      url = parentNode.getAttribute('data-url'),\n      iframes = document.querySelector('#iframeContent').getElementsByTagName('iframe'),\n      preivousUrl = parentNode.previousElementSibling.getAttribute('data-url');\n    parentNode.remove();\n    for (let i = iframes.length - 1; i >= 0; i--) {\n      const thisUrl = iframes[i].getAttribute('data-url');\n      // 获取需要删除的iframe\n      if (url === thisUrl) {\n        iframes[i].remove();\n        break;\n      }\n    }\n    selectTabAndIframe(preivousUrl);\n    calTab();\n  }\n\n  // tab点击切换\n  if (target.className.indexOf('page-tab-ellipsis-name') > -1) {\n    const targetUrl = target.parentNode.getAttribute('data-url');\n    // 显示选中的toptab和iframe\n    selectTabAndIframe(targetUrl);\n  }\n});\n\n/**\n * 登出回调\n * @param response\n * @param err\n */\nfunction loginOutCallback(response, err) {\n  localStorage.removeItem('userInfo');\n  // console.log(response);\n  if (err !== null) {\n    console.log(err);\n  }\n  window.location.href = '/login/login.html';\n}\n\n/**\n * 登出\n */\nfunction logout() {\n  loginService.logout(loginOutCallback);\n}\ndocument.querySelector('.logOut').addEventListener('click', logout, false);\n\n// 缓存eleDefine和eleInfo数据\nfunction elementDefine() {\n  return axios({\n    method: 'get',\n    url: defineUrl,\n    headers: { 'Accept': 'application/json' }\n  });\n}\nfunction elementInfo() {\n  return axios({\n    method: 'get',\n    url: typeUrl,\n    headers: { 'Accept': 'application/json' }\n  });\n}\naxios.all([elementDefine(), elementInfo()])\n  .then(axios.spread((eleDefine, eleInfo) => {\n    localStorage.setItem('eleDefine', JSON.stringify(eleDefine));\n    localStorage.setItem('eleInfo', JSON.stringify(eleInfo));\n  }));\nwindow.addEventListener('beforeunload', () => {\n  window.localStorage.removeItem('eleInfo');\n  window.localStorage.removeItem('eleDefine');\n});\n",null]}