{"remainingRequest":"/Users/macsen/Desktop/rltx-webpack/api/OrgService.js","dependencies":[{"path":"/Users/macsen/Desktop/rltx-webpack/api/OrgService.js","mtime":1511527701000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_babel-loader@6.2.10@babel-loader/lib/index.js","mtime":1481808750000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_cache-loader@1.2.0@cache-loader/dist/cjs.js","mtime":1510929699000}],"contextDependencies":[],"result":["/**\n * 组织服务\n * Created by baipf on 2017/5/18.\n */\n\nimport * as utils from './Utils';\n\nconst axios = require('axios');\nconst apiDomain = require('./ApiConst').apiOrgDomain;\naxios.defaults.withCredentials = true;\n\nimport * as HTTP from './httpUtil';\n\n/**\n * 创建组织\n * @param paramObj      参数对象\n *         orgFullName   全称\n *         telephone     电话\n *         websiteUrl    网址\n *         mainBusiness  主营业务\n *         province      省编码\n *         city          市编码\n *         county        区编码\n *         address       详细地址\n * @param callback      回调\n */\nfunction add(paramObj, cb) {\n  const apiUrl = `${apiDomain}/org/add`;\n  HTTP.post(apiUrl, paramObj, (res, error) => {\n    cb(res, error);\n  });\n}\n\n/**\n * 组织发起认证\n * @param callback  回调\n */\nfunction applyCert(callback) {\n  const apiUrl = `${apiDomain}/org/apply_cert`;\n  axios.get(apiUrl).then(function (response) {\n    callback(response, null);\n  }).catch(function (err) {\n    callback(null, err);\n  });\n}\n\n/**\n * 获取组织信息\n * @param callback  回调\n */\nfunction selfs(callback) {\n  const apiUrl = `${apiDomain}/org/self`;\n  axios.get(apiUrl).then(function (response) {\n    callback(response, null);\n  }).catch(function (err) {\n    callback(null, err);\n  });\n}\n\n/**\n * 编辑组织\n * @param paramObj      参数对象\n *         orgFullName   全称\n *         telephone     电话\n *         websiteUrl    网址\n *         mainBusiness  主营业务\n *         province      省编码\n *         city          市编码\n *         county        区编码\n *         address       详细地址\n * @param callback      回调\n */\nfunction edit(code, paramObj, cb) {\n  const apiUrl = `${apiDomain}/org/self/edit`;\n  HTTP.post(apiUrl, paramObj, (res, error) => {\n    cb(res, error);\n  });\n}\n\n/**\n * 人员拒绝组织邀请\n * @param paramObj  参数对象\n *         id        邀请id\n * @param callback  回调\n */\nfunction personCancel(paramObj, callback) {\n  const apiUrl = `${apiDomain}/org/${paramObj.id}/persion_cancel`;\n  axios.post(apiUrl).then(function (response) {\n    callback(response, null);\n  }).catch(function (err) {\n    callback(null, err);\n  });\n}\n\n/**\n * 人员同意组织邀请\n * @param paramObj  参数对象\n *         id        邀请id\n * @param callback  回调\n */\nfunction personConfirm(paramObj, callback) {\n  const apiUrl = `${apiDomain}/org/${paramObj.id}/persion_confirm`;\n  axios.post(apiUrl).then(function (response) {\n    callback(response, null);\n  }).catch(function (err) {\n    callback(null, err);\n  });\n}\n\n/**\n * 根据组织全称完全匹配\n * @param paramObj      参数对象\n *         loginName 组织名称\n * @param callback  回调\n */\nfunction get({}, cb) {\n  const apiUrl = `${apiDomain}/org/self`;\n  HTTP.get(apiUrl, {}, (success, error) => {\n    cb(success, error);\n  });\n}\n\n/**\n * 申请加入组织\n * @param paramObj  参数对象\n *         orgCode   组织\n * @param callback  回调\n */\nfunction apply(paramObj, callback) {\n  const apiUrl = `${apiDomain}/org/${paramObj.orgCode}/apply`;\n  axios.post(apiUrl).then(function (response) {\n    callback(response, null);\n  }).catch(function (err) {\n    callback(null, err);\n  });\n}\n\n// 增加部门\nfunction addDept(paramObj, callback) {\n  HTTP.post(`${apiDomain}/dept/add`, paramObj, (success, error) => {\n    callback(success, error);\n  });\n}\n\n//编辑部门\nfunction editDept(paramObj, callback) {\n  HTTP.post(`${apiDomain}/dept/${paramObj.code}/edit`, paramObj, (success, error) => {\n    callback(success, error);\n  });\n}\n\n//删除部门\nfunction deletedDept(paramObj, callback) {\n  HTTP.post(`${apiDomain}/dept/${paramObj.code}/delete`, {}, (success, error) => {\n    callback(success, error);\n  });\n}\n\n//获取自身的部门列表\nfunction getSelfDept(paramObj, callback) {\n  HTTP.get(`${apiDomain}/dept/self/list`, paramObj, (success, error) => {\n    callback(success, error);\n  });\n}\n\nexport { add, applyCert, selfs, edit, personCancel, personConfirm, get, apply, addDept, editDept, deletedDept, getSelfDept };\n",null]}