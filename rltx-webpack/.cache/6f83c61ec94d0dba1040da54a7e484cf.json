{"remainingRequest":"/Users/macsen/Desktop/rltx-webpack/api/httpUtil.js","dependencies":[{"path":"/Users/macsen/Desktop/rltx-webpack/api/httpUtil.js","mtime":1511527701000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_babel-loader@6.2.10@babel-loader/lib/index.js","mtime":1481808750000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_cache-loader@1.2.0@cache-loader/dist/cjs.js","mtime":1510929699000}],"contextDependencies":[],"result":["import * as Utils from './Utils.js'\nconst axios = require('axios'),\n  code = {\n    success: 200,\n    forbid: 401,\n    noUse: 403\n  };\naxios.defaults.withCredentials = true;\nfunction showError(response, url) {\n  console.error('error code: ' + response.code);\n  console.error('error url: ' + url);\n  console.error('error message: ' + response.content);\n}\nfunction matchRight (res) {\n  if ( res.status === code.forbid || res.data.code === code.forbid ) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction goBack(res) {\n  if (matchRight(res)) {\n    window.parent.location.href = '/login/login.html';\n  }\n}\nfunction get(url, paramsObj, callback) {\n  const len = Object.keys(paramsObj).length,\n    getUrl = len > 0 ? `${url}?${Utils.objToParamStr(paramsObj)}` : `${url}`;\n  axios.get(getUrl).then((res) => {\n    goBack(res);\n    const response = res.data;\n    if (callback && response.code === code.success) {\n      callback(response, null);\n    } else {\n      showError(response, url);\n      callback(null, response);\n      // alert(response.code);\n      return false;\n    }\n  }).catch((err) => {\n  \tconsole.error(err);\n    callback(null, err);\n  });\n}\n\nfunction post(url, paramsObj, callback) {\n  const obj = Array.isArray(paramsObj) ? paramsObj : Utils.objToParamStr(paramsObj);\n  axios.post(url, obj, {\n  \theaders: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' }\n  }).then((res) => {\n    goBack(res);\n    const response = res.data;\n    if (callback && response.code === code.success) {\n      callback(response, null);\n    } else {\n      showError(response, url);\n      callback(null, response);\n      // alert(response.content);\n      return false;\n    }\n  }).catch((err) => {\n  \tconsole.error(err);\n    callback(null, err);\n  });\n}\n\nfunction postJson(url, paramsObj, callback) {\n  axios.post(url, paramsObj).then((res) => {\n    const response = res.data;\n    if (callback && response.code === code.success) {\n      callback(response, null);\n    } else {\n      showError(response, url);\n      callback(null, response);\n      return false;\n    }\n  }).catch((err) => {\n    console.error(err);\n    callback(null, err);\n  });\n}\n\nexport {get, post, postJson};\n",null]}