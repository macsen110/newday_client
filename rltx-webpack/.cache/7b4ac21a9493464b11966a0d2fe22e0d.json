{"remainingRequest":"/Users/macsen/Desktop/rltx-webpack/src/car/labMap.js","dependencies":[{"path":"/Users/macsen/Desktop/rltx-webpack/src/car/labMap.js","mtime":1511527692000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_babel-loader@6.2.10@babel-loader/lib/index.js","mtime":1481808750000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_cache-loader@1.2.0@cache-loader/dist/cjs.js","mtime":1510929699000}],"contextDependencies":[],"result":["'use strict';\r\n\r\nvar _createClass = function() {\r\n    function defineProperties(target, props) {\r\n        for (var i = 0; i < props.length; i++) {\r\n            var descriptor = props[i];\r\n            descriptor.enumerable = descriptor.enumerable || false;\r\n            descriptor.configurable = true;\r\n            if (\"value\" in descriptor) descriptor.writable = true;\r\n            Object.defineProperty(target, descriptor.key, descriptor);\r\n        }\r\n    }\r\n    return function(Constructor, protoProps, staticProps) {\r\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n        if (staticProps) defineProperties(Constructor, staticProps);\r\n        return Constructor;\r\n    };\r\n}();\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n}\r\n\r\nvar mapTool = {\r\n    delRepeat: function delRepeat(array) {\r\n        var point = [];\r\n        point.push(array[0]);\r\n        var len = array.length;\r\n        for (var i = 0; i < len; i ++) {\r\n            for (var j = i + 1; j < len; j ++) {\r\n                if (array[j].lat !== array[i].lat || array[j].lng !== array[i].lng) {\r\n                    point.push(array[j]);\r\n                    i = j;\r\n                } else if (array[j].stop_time) {\r\n                    array[i].stop_time = array[j].stop_time;\r\n                }\r\n            }\r\n        }\r\n        return point;\r\n    },\r\n\r\n    PI: 3.14159265358979324,\r\n    x_pi: 3.14159265358979324 * 3000.0 / 180.0,\r\n    delta: function delta(lat, lng) {\r\n        var a = 6378245.0;\r\n        var ee = 0.00669342162296594323;\r\n        var dLat = this.transformLat(lng - 105.0, lat - 35.0);\r\n        var dLon = this.transformLon(lng - 105.0, lat - 35.0);\r\n        var radLat = lat / 180.0 * this.PI;\r\n        var magic = Math.sin(radLat);\r\n        magic = 1 - ee * magic * magic;\r\n        var sqrtMagic = Math.sqrt(magic);\r\n        dLat = dLat * 180.0 / (a * (1 - ee) / (magic * sqrtMagic) * this.PI);\r\n        dLon = dLon * 180.0 / (a / sqrtMagic * Math.cos(radLat) * this.PI);\r\n        return {\r\n            'lat': dLat,\r\n            'lng': dLon\r\n        };\r\n    },\r\n    gcj_encrypt: function gcj_encrypt(wgsLat, wgsLon) {\r\n        if (this.outOfChina(wgsLat, wgsLon)) {\r\n            return {\r\n                'lat': wgsLat,\r\n                'lng': wgsLon\r\n            };\r\n        }\r\n        var d = this.delta(wgsLat, wgsLon);\r\n        return {\r\n            'lat': wgsLat + d.lat,\r\n            'lng': wgsLon + d.lng\r\n        };\r\n    },\r\n    gcj_decrypt: function gcj_decrypt(gcjLat, gcjLon) {\r\n        if (this.outOfChina(gcjLat, gcjLon)) {\r\n            return {\r\n                'lat': gcjLat,\r\n                'lng': gcjLon\r\n            };\r\n        }\r\n        var d = this.delta(gcjLat, gcjLon);\r\n        return {\r\n            'lat': gcjLat - d.lat,\r\n            'lng': gcjLon - d.lng\r\n        };\r\n    },\r\n    gcj_decrypt_exact: function gcj_decrypt_exact(gcjLat, gcjLon) {\r\n        var initDelta = 0.01;\r\n        var threshold = 0.000000001;\r\n        var dLat = initDelta;\r\n        var dLon = initDelta;\r\n        var mLat = gcjLat - dLat;\r\n        var mLon = gcjLon - dLon;\r\n        var pLat = gcjLat + dLat;\r\n        var pLon = gcjLon + dLon;\r\n        var wgsLat = void 0;\r\n        var wgsLon = void 0;\r\n        var i = 0;\r\n        while (1) {\r\n            wgsLat = (mLat + pLat) / 2;\r\n            wgsLon = (mLon + pLon) / 2;\r\n            var tmp = this.gcj_encrypt(wgsLat, wgsLon);\r\n            dLat = tmp.lat - gcjLat;\r\n            dLon = tmp.lng - gcjLon;\r\n            if (Math.abs(dLat) < threshold && Math.abs(dLon) < threshold) {\r\n                break;\r\n            }\r\n            if (dLat > 0) {\r\n                pLat = wgsLat;\r\n            } else {\r\n                mLat = wgsLat;\r\n            }\r\n            if (dLon > 0) {\r\n                pLon = wgsLon;\r\n            } else {\r\n                mLon = wgsLon;\r\n            }\r\n            if (i > 10000) {\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n        return {\r\n            'lat': wgsLat,\r\n            'lng': wgsLon\r\n        };\r\n    },\r\n    bd_encrypt: function bd_encrypt(gcjLat, gcjLon) {\r\n        var x = gcjLon;\r\n        var y = gcjLat;\r\n        var z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * this.x_pi);\r\n        var theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * this.x_pi);\r\n        var bdLon = z * Math.cos(theta) + 0.0065;\r\n        var bdLat = z * Math.sin(theta) + 0.006;\r\n        return {\r\n            'lat': bdLat,\r\n            'lng': bdLon\r\n        };\r\n    },\r\n    bd_decrypt: function bd_decrypt(bdLat, bdLon) {\r\n        var x = bdLon - 0.0065;\r\n        var y = bdLat - 0.006;\r\n        var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * this.x_pi);\r\n        var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * this.x_pi);\r\n        var gcjLon = z * Math.cos(theta);\r\n        var gcjLat = z * Math.sin(theta);\r\n        return {\r\n            'lat': gcjLat,\r\n            'lng': gcjLon\r\n        };\r\n    },\r\n    mercator_encrypt: function mercator_encrypt(wgsLat, wgsLon) {\r\n        var x = wgsLon * 20037508.34 / 180;\r\n        var y = Math.log(Math.tan((90 + wgsLat) * (this.PI / 360))) / (this.PI / 180);\r\n        y = y * 20037508.34 / 180;\r\n        return {\r\n            'lat': y,\r\n            'lng': x\r\n        };\r\n    },\r\n    mercator_decrypt: function mercator_decrypt(mercatorLat, mercatorLon) {\r\n        var x = mercatorLon / 20037508.34 * 180;\r\n        var y = mercatorLat / 20037508.34 * 180;\r\n        y = 180 / this.PI * (2 * Math.atan(Math.exp(y * this.PI / 180)) - this.PI / 2);\r\n        return {\r\n            'lat': y,\r\n            'lng': x\r\n        };\r\n    },\r\n    distance: function distance(latA, lngA, latB, lngB) {\r\n        var earthR = 6371000;\r\n        var x = Math.cos(latA * this.PI / 180) * Math.cos(latB * this.PI / 180) * Math.cos((lngA - lngB) * this.PI / 180);\r\n        var y = Math.sin(latA * this.PI / 180) * Math.sin(latB * this.PI / 180);\r\n        var s = x + y;\r\n        if (s > 1) {\r\n            s = 1;\r\n        }\r\n        if (s < -1) {\r\n            s = -1;\r\n        }\r\n        var alpha = Math.acos(s);\r\n        var distance = alpha * earthR;\r\n        return distance;\r\n    },\r\n    outOfChina: function outOfChina(lat, lng) {\r\n        if (lng < 72.004 || lng > 137.8347) {\r\n            return true;\r\n        }\r\n        if (lat < 0.8293 || lat > 55.8271) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    transformLat: function transformLat(x, y) {\r\n        var ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * Math.sqrt(Math.abs(x));\r\n        ret += (20.0 * Math.sin(6.0 * x * this.PI) + 20.0 * Math.sin(2.0 * x * this.PI)) * 2.0 / 3.0;\r\n        ret += (20.0 * Math.sin(y * this.PI) + 40.0 * Math.sin(y / 3.0 * this.PI)) * 2.0 / 3.0;\r\n        ret += (160.0 * Math.sin(y / 12.0 * this.PI) + 320 * Math.sin(y * this.PI / 30.0)) * 2.0 / 3.0;\r\n        return ret;\r\n    },\r\n    transformLon: function transformLon(x, y) {\r\n        var ret = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * Math.sqrt(Math.abs(x));\r\n        ret += (20.0 * Math.sin(6.0 * x * this.PI) + 20.0 * Math.sin(2.0 * x * this.PI)) * 2.0 / 3.0;\r\n        ret += (20.0 * Math.sin(x * this.PI) + 40.0 * Math.sin(x / 3.0 * this.PI)) * 2.0 / 3.0;\r\n        ret += (150.0 * Math.sin(x / 12.0 * this.PI) + 300.0 * Math.sin(x / 30.0 * this.PI)) * 2.0 / 3.0;\r\n        return ret;\r\n    },\r\n    transformPoint: function transformPoint(point) {\r\n        var pointArray = point;\r\n        var len = pointArray.length;\r\n        for (var i = 0; i < len; i += 1) {\r\n            if (pointArray[i].lng && pointArray[i].lat) {\r\n                var gcj = this.gcj_encrypt(pointArray[i].lat, pointArray[i].lng);\r\n                var baidu = this.bd_encrypt(gcj.lat, gcj.lng);\r\n                pointArray[i].lng = baidu.lng;\r\n                pointArray[i].lat = baidu.lat;\r\n            } else {\r\n                pointArray.splice(i, 1);\r\n            }\r\n        }\r\n        return pointArray;\r\n    },\r\n    getDirection: function getDirection(direction) {\r\n        switch (true) {\r\n            case direction === 0:\r\n                return '北方';\r\n            case direction === 90:\r\n                return '东方';\r\n            case direction === 180:\r\n                return '南方';\r\n            case direction === 270:\r\n                return '西方';\r\n            case direction === 45:\r\n                return '东北方';\r\n            case direction === 135:\r\n                return '东南方';\r\n            case direction === 225:\r\n                return '西南方';\r\n            case direction === 315:\r\n                return '西北方';\r\n            case direction > 0 && direction < 45:\r\n                return '东北方偏北';\r\n            case direction > 45 && direction < 90:\r\n                return '东北方偏东';\r\n            case direction > 90 && direction < 135:\r\n                return '东南方偏东';\r\n            case direction > 135 && direction < 180:\r\n                return '东南方偏南';\r\n            case direction > 180 && direction < 225:\r\n                return '西南方偏南';\r\n            case direction > 225 && direction < 270:\r\n                return '西南方偏西';\r\n            case direction > 270 && direction < 315:\r\n                return '西北方偏西';\r\n            case direction > 315 && direction < 360:\r\n                return '西北方偏北';\r\n            default:\r\n                return '西北方偏北';\r\n        }\r\n    },\r\n    stopTime: function stopTime(start, end) {\r\n        var satrtTime = Date.parse(start);\r\n        var endTime = Date.parse(end);\r\n        var totalTime = (endTime - satrtTime) / 1000 / 60;\r\n        var hour = 0;\r\n        var day = 0;\r\n        var minute = 0;\r\n        var stopTime = '';\r\n        var dayMinute = 24 * 60;\r\n        var hourMinute = 60;\r\n        switch (true) {\r\n            case totalTime >= dayMinute:\r\n                day = Math.floor(totalTime / dayMinute);\r\n                hour = Math.floor((totalTime - day * dayMinute) / hourMinute);\r\n                minute = totalTime - day * dayMinute - hour * hourMinute;\r\n                stopTime = day.toFixed(0) + '\\u5929' + hour.toFixed(0) + '\\u5C0F\\u65F6' + minute.toFixed(0) + '\\u5206\\u949F';\r\n                break;\r\n            case totalTime >= hourMinute && totalTime < dayMinute:\r\n                hour = Math.floor(totalTime / hourMinute);\r\n                minute = totalTime - hour * hourMinute;\r\n                stopTime = hour.toFixed(0) + '\\u5C0F\\u65F6' + minute.toFixed(0) + '\\u5206\\u949F';\r\n                break;\r\n            default:\r\n                stopTime = totalTime.toFixed(0) + '\\u5206\\u949F';\r\n                break;\r\n        }\r\n        return stopTime;\r\n    },\r\n    getPostion: function getPostion(lng, lat) {\r\n        var _this = this;\r\n\r\n        var geoc = new BMap.Geocoder();\r\n        var posPoint = new BMap.Point(lng, lat);\r\n        var address = '';\r\n        geoc.getLocation(posPoint, function(rs) {\r\n            _this.address = rs.address;\r\n        });\r\n        address = this.address;\r\n        this.address = '';\r\n        return address;\r\n    }\r\n};\r\n\r\nvar MapLib = function() {\r\n    function MapLib(ele, opt) {\r\n        _classCallCheck(this, MapLib);\r\n\r\n        this.ele = ele;\r\n        this.opt = opt || {};\r\n    }\r\n\r\n    _createClass(MapLib, [{\r\n        key: 'init',\r\n        value: function init() {\r\n            MapLib.loadMap();\r\n            this.map = null;\r\n            document.getElementById(this.ele).onselectstart = function() {\r\n                event.returnValue = false;\r\n            };\r\n        }\r\n    }, {\r\n        key: 'initMap',\r\n        value: function initMap() {\r\n            var map = new BMap.Map(this.ele);\r\n            var point = new BMap.Point(this.opt.initLongitude || 116.404, this.opt.initLatitude || 39.915);\r\n            map.centerAndZoom(point, 15);\r\n            map.enableScrollWheelZoom();\r\n            this.map = map;\r\n            var me = this;\r\n            MapLib.setMap(map, this.opt);\r\n            var handler = function hander() {\r\n                var pointArray = me.pointArray;\r\n                if (me.pointArray) {\r\n                    me.setLu(pointArray);\r\n                    me.pointArray = null;\r\n                }\r\n            };\r\n            if (this.lu) {\r\n                handler();\r\n                this.islushu = true;\r\n            } else {\r\n                this.islushu = true;\r\n                document.addEventListener('lushu', handler, false);\r\n            }\r\n        }\r\n    }, {\r\n        key: 'initLu',\r\n        value: function initLu(pointArray, maxLen) {\r\n            this.pointArray = pointArray;\r\n            this.lu = true;\r\n            this.maxLen = maxLen;\r\n            var lushu = new Event('lushu');\r\n            document.dispatchEvent(lushu);\r\n            if (this.islushu) {\r\n                var me = this;\r\n                if (me.pointArray) {\r\n                    me.setLu(pointArray);\r\n                    me.pointArray = null;\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: 'setLu',\r\n        value: function setLu(pointArray) {\r\n            var _this2 = this;\r\n\r\n            var map = this.map;\r\n            map.clearOverlays();\r\n            var pointAll = pointArray;\r\n            var opt = this.opt;\r\n            MapLib.drawPoint(pointAll, map, this.maxLen);\r\n            if (document.getElementById('$baidulushu')) {\r\n                this.drawLuShu(pointAll, map);\r\n            } else {\r\n                MapLib.loadLushu(opt).then(function() {\r\n                    _this2.drawLuShu(pointAll, map);\r\n                });\r\n            }\r\n            this.pointAll = pointAll;\r\n        }\r\n    }, {\r\n        key: 'drawLuShu',\r\n        value: function drawLuShu(pointArray, map) {\r\n            MapLib.linkPoint(pointArray, map);\r\n            var lushu = null;\r\n            lushu = new BMapLib.LuShu(map, pointArray, {\r\n                defaultContent: '',\r\n                autoView: true,\r\n                icon: new BMap.Icon(MapLib.carImg, new BMap.Size(36, 16)),\r\n                speed: 2000,\r\n                enableRotation: true,\r\n                landmarkPois: []\r\n            });\r\n            this.lushu = lushu;\r\n        }\r\n    }, {\r\n        key: 'startLushu',\r\n        value: function startLushu() {\r\n            this.lushu.start();\r\n            if (this.lushu.i < 1) {\r\n                MapLib.showLuShuInfo(this.pointAll, this.lushu, this.map);\r\n            }\r\n            MapLib.removeLushuIcon(this.map);\r\n        }\r\n    }, {\r\n        key: 'stopLushu',\r\n        value: function stopLushu() {\r\n            this.lushu.stop();\r\n        }\r\n    }, {\r\n        key: 'pauseLushu',\r\n        value: function pauseLushu() {\r\n            this.lushu.pause();\r\n        }\r\n    }, {\r\n        key: 'returToStart',\r\n        value: function returToStart() {\r\n            this.lushu.stop();\r\n            this.lushu.removeMaker();\r\n            this.lushu.addMarker();\r\n            MapLib.removeLushuIcon(this.map);\r\n        }\r\n    }, {\r\n        key: 'setSpeed',\r\n        value: function setSpeed(times) {\r\n            this.lushu.setSpeed(times);\r\n        }\r\n    }], [{\r\n        key: 'loadJs',\r\n        value: function loadJs(scriptId, src) {\r\n            var script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = src;\r\n            script.id = scriptId;\r\n            document.body.appendChild(script);\r\n            var promise = new Promise(function(resolve) {\r\n                script.addEventListener('load', function() {\r\n                    resolve();\r\n                });\r\n            });\r\n            return promise;\r\n        }\r\n    }, {\r\n        key: 'loadMap',\r\n        value: function loadMap() {\r\n            var key = '0splGL787be69VgsOZX2t3vMvw016i0F';\r\n            MapLib.loadJs('$baidumapapi', 'http://api.map.baidu.com/api?v=2.0&ak=' + key + '&callback=mapLib.initMap');\r\n        }\r\n    }, {\r\n        key: 'loadLushu',\r\n        value: function loadLushu(opt) {\r\n            return MapLib.loadJs('$baidulushu', opt.lushu || './lib/LuShu/LuShu.js');\r\n        }\r\n    }, {\r\n        key: 'setMap',\r\n        value: function setMap(map, opt) {\r\n            map.enableScrollWheelZoom();\r\n            MapLib.pointImg = opt.pointImg || './build/img/blue_dot.png';\r\n            MapLib.carImg = opt.carImg || './build/img/car.png';\r\n            MapLib.startImg = opt.startImg || './build/img/map_start.png';\r\n            MapLib.finishImg = opt.finishImg || './build/img/map_finish.png';\r\n            var topLeftControl = new BMap.ScaleControl({\r\n                anchor: BMAP_ANCHOR_TOP_LEFT\r\n            });\r\n            var topLeftNavigation = new BMap.NavigationControl();\r\n            var mapType = new BMap.MapTypeControl({\r\n                mapTypes: [BMAP_NORMAL_MAP, BMAP_HYBRID_MAP]\r\n            });\r\n            map.addControl(topLeftControl);\r\n            map.addControl(topLeftNavigation);\r\n            map.addControl(mapType);\r\n        }\r\n    }, {\r\n        key: 'drawPoint',\r\n        value: function drawPoint(pointArray, map, maxLen) {\r\n            var myIcon = new BMap.Icon(MapLib.pointImg, new BMap.Size(12, 12));\r\n            var startIcon = new BMap.Icon(MapLib.startImg, new BMap.Size(36, 36));\r\n            var finishIcon = new BMap.Icon(MapLib.finishImg, new BMap.Size(36, 36));\r\n            var carIcon = new BMap.Icon(MapLib.carImg, new BMap.Size(36, 36));\r\n\r\n            function addMarker(bdPoint, point, pointIcon) {\r\n                var marker = null;\r\n                if (pointIcon) {\r\n                    marker = new BMap.Marker(bdPoint, {\r\n                        icon: pointIcon\r\n                    });\r\n                } else {\r\n                    marker = new BMap.Marker(bdPoint);\r\n                }\r\n                marker.addEventListener('mouseover', function() {\r\n                    MapLib.showBdInfo(point, map);\r\n                });\r\n                marker.addEventListener('mouseout', function() {\r\n                    MapLib.hideBdInfo(map);\r\n                });\r\n                map.addOverlay(marker);\r\n            }\r\n            var len = pointArray.length;\r\n            var defaultPoint = new BMap.Point(pointArray[0].lng, pointArray[0].lat);\r\n            var startPoint = new BMap.Point(pointArray[0].lng, pointArray[0].lat);\r\n            var finishPoint = new BMap.Point(pointArray[len - 1].lng, pointArray[len - 1].lat);\r\n            map.centerAndZoom(defaultPoint, 14);\r\n            addMarker(startPoint, pointArray[0], carIcon);\r\n            addMarker(startPoint, pointArray[0], startIcon);\r\n            addMarker(finishPoint, pointArray[len - 1], finishIcon);\r\n            if (maxLen && maxLen < len) {\r\n                var interval = Math.floor(len / maxLen);\r\n                for (var i = 1; i < len - 1; i += 1) {\r\n                    var bdPointMax = new BMap.Point(pointArray[i].lng, pointArray[i].lat);\r\n                    if (pointArray[i].stop_time) {\r\n                        addMarker(bdPointMax, pointArray[i]);\r\n                    } else if (i % interval === 0) {\r\n                        addMarker(bdPointMax, pointArray[i], myIcon);\r\n                    }\r\n                    bdPointMax = null;\r\n                }\r\n            } else {\r\n                for (var _i = 1; _i < len - 1; _i += 1) {\r\n                    var bdPoint = new BMap.Point(pointArray[_i].lng, pointArray[_i].lat);\r\n                    if (pointArray[_i].stop_time) {\r\n                        addMarker(bdPoint, pointArray[_i]);\r\n                    } else {\r\n                        addMarker(bdPoint, pointArray[_i], myIcon);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: 'linkPoint',\r\n        value: function linkPoint(pointArray, map) {\r\n            var bdPoint = [];\r\n            var len = pointArray.length;\r\n            for (var i = 0; i < len; i += 1) {\r\n                bdPoint.push(new BMap.Point(pointArray[i].lng, pointArray[i].lat));\r\n            }\r\n            var polyline = new BMap.Polyline(bdPoint, {\r\n                strokeColor: 'blue',\r\n                strokeWeight: 3,\r\n                strokeOpacity: 0.5\r\n            });\r\n            map.addOverlay(polyline);\r\n            map.setViewport(bdPoint);\r\n        }\r\n    }, {\r\n        key: 'countDistance',\r\n        value: function countDistance(pointA, pointB, map) {\r\n            var point1 = new BMap.Point(pointA.lng, pointA.lat);\r\n            var point2 = new BMap.Point(pointB.lng, pointB.lat);\r\n            var distance = map.getDistance(point1, point2) / 1000;\r\n            return distance;\r\n        }\r\n    }, {\r\n        key: 'removeLushuIcon',\r\n        value: function removeLushuIcon(map) {\r\n            var allOverlay = map.getOverlays();\r\n            var len = allOverlay.length;\r\n            for (var i = 0; i < len - 1; i += 1) {\r\n                if (allOverlay[i].getIcon) {\r\n                    if (allOverlay[i].getIcon().imageUrl === MapLib.carImg && i === 0) {\r\n                        map.removeOverlay(allOverlay[i]);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: 'showLuShuInfo',\r\n        value: function showLuShuInfo(point, lushu) {\r\n            var html = void 0;\r\n            var count = 0;\r\n            var len = point.length;\r\n            var distance = 0;\r\n            var handler = function hander() {\r\n                if (count === len - 1) {\r\n                    count = 0;\r\n                    return false;\r\n                }\r\n                if (count === 0) {\r\n                    distance = 0;\r\n                }\r\n                distance += Number(mapTool.distance(point[count].lat, point[count].lng, point[count + 1].lat, point[count + 1].lng)) / 1000;\r\n                lushu.showInfoWindow();\r\n                count += 1;\r\n                html = '<div style=\"text-align: left;\"><span>\\u5F53\\u524D\\u91CC\\u7A0B\\uFF1A</span>' + distance.toFixed(2) + '\\u516C\\u91CC</div>';\r\n                html += '<div style=\"text-align: left;\"><span>\\u5F53\\u524D\\u901F\\u5EA6\\uFF1A</span>' + (point[count].speed ? point[count].speed : 0) + 'km/\\u5C0F\\u65F6</div>';\r\n                html += '<div style=\"text-align: left;\"><span>\\u5F53\\u524D\\u65F6\\u95F4\\uFF1A</span>' + point[count].record_time + '</div>';\r\n                if (point.truckLicenseNo) {\r\n                    html += '<div style=\"text-align: left;\"><span>\\u8F66\\u724C\\u53F7\\uFF1A</span>' + point.truckLicenseNo + '</div>';\r\n                }\r\n                if (point.hz) {\r\n                    html += '<div style=\"text-align: left;\"><span>\\u8D27\\u4E3B\\uFF1A</span>' + point.hz + '</div>';\r\n                }\r\n                if (point.tdh) {\r\n                    html += '<div style=\"text-align: left;\"><span>\\u63D0\\u5355\\u53F7\\uFF1A</span>' + point.tdh + '</div>';\r\n                }\r\n                if (point.hpxx) {\r\n                    html += '<div style=\"text-align: left;\"><span>\\u8D27\\u54C1\\u4FE1\\u606F\\uFF1A</span>' + point.hpxx + '</div>';\r\n                }\r\n                lushu.setHtml(html);\r\n            };\r\n            document.removeEventListener('moveNext', handler, false);\r\n            document.addEventListener('moveNext', handler, false);\r\n        }\r\n    }, {\r\n        key: 'showBdInfo',\r\n        value: function showBdInfo(point, map) {\r\n            var html = '';\r\n            if (point.stop_time) {\r\n                html = '<div><span>\\u505C\\u7559\\u65F6\\u95F4\\uFF1A</span>' + mapTool.stopTime(point.record_time, point.stop_time) + '</div><div><span>\\u5F00\\u59CB\\u65F6\\u95F4\\uFF1A</span>' + point.record_time + '</div>';\r\n                html += '<div><span>\\u7ED3\\u675F\\u65F6\\u95F4\\uFF1A</span>' + point.stop_time + '</div><div><span>\\u505C\\u7559\\u4F4D\\u7F6E\\uFF1A</span>' + getAddress(point.lng, point.lat) + '</div>';\r\n            } else {\r\n                html = '<div><span>\\u5F53\\u524D\\u65F6\\u95F4\\uFF1A</span>' + point.record_time + '</div>';\r\n                html += '<div><span>\\u5F53\\u524D\\u4F4D\\u7F6E\\uFF1A</span>' + mapTool.getPostion(point.lng, point.lat) + '</div>';\r\n                html += '<div><span>\\u5F53\\u524D\\u901F\\u5EA6\\uFF1A</span>' + point.speed + 'km/\\u5C0F\\u65F6</div>';\r\n            }\r\n            if (point.truckLicenseNo) {\r\n                html += '<div style=\"text-align: left;\"><span>\\u8F66\\u724C\\u53F7\\uFF1A</span>' + point.truckLicenseNo + '</div>';\r\n            }\r\n            if (point.hz) {\r\n                html += '<div style=\"text-align: left;\"><span>\\u8D27\\u4E3B\\uFF1A</span>' + point.hz + '</div>';\r\n            }\r\n            if (point.tdh) {\r\n                html += '<div style=\"text-align: left;\"><span>\\u63D0\\u5355\\u53F7\\uFF1A</span>' + point.tdh + '</div>';\r\n            }\r\n            if (point.hpxx) {\r\n                html += '<div style=\"text-align: left;\"><span>\\u8D27\\u54C1\\u4FE1\\u606F\\uFF1A</span>' + point.hpxx + '</div>';\r\n            }\r\n            var infoWindow = new BMap.InfoWindow(html, null);\r\n            var bdPoint = new BMap.Point(point.lng, point.lat);\r\n            map.openInfoWindow(infoWindow, bdPoint);\r\n        }\r\n    }, {\r\n        key: 'hideBdInfo',\r\n        value: function hideBdInfo(map) {\r\n            map.closeInfoWindow();\r\n        }\r\n    }]);\r\n\r\n  return MapLib;\r\n}();\r\n\r\nwindow.mapTool = mapTool;\r\nwindow.MapLib = MapLib;",null]}