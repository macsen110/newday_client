{"remainingRequest":"/Users/macsen/Desktop/rltx-webpack/api/DataSourceService.js","dependencies":[{"path":"/Users/macsen/Desktop/rltx-webpack/api/DataSourceService.js","mtime":1511527701000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_babel-loader@6.2.10@babel-loader/lib/index.js","mtime":1481808750000},{"path":"/Users/macsen/Desktop/rltx-webpack/node_modules/_cache-loader@1.2.0@cache-loader/dist/cjs.js","mtime":1510929699000}],"contextDependencies":[],"result":["/**\n * ResourceService.js\n * Created by dsky on 17/7/7.\n */\n\n// import * as waybillService from './waybillService';\nimport { objToParamStr } from './Utils.js';\nimport * as RateService from './rateService.js';\n// import { getColumn as PartnergetColumn, getSearch as PartnergetSearch } from './PartnerService';\n// import { getColumn as RoutegetColumn, getSearch as RoutegetSearch } from './RouteService';\n// import { getColumn as LogisticsgetColumn, getSearch as LogisticsgetSearch } from './LogisticsService';\n// import { getColumn as TruckgetColumn, getSearch as TruckgetSearch } from './TruckService';\n// import { getColumn as TrailergetColumn, getSearch as TrailergetSearch } from './TrailerService';\nconst axios = require('axios'),\n  ApiConst = require('./ApiConst'),\n  TRUCK_MODEL_DATA = require('./TruckModelData').list,\n  PAGE_SIZE = 10,\n  area = require('./area.json'),\n  // defineUrl = `${ApiConst.orgConfigUrl}/element_type/define`,\n  // typeUrl = `${ApiConst.orgConfigUrl}/element_type/info`,\n  LOCAL_CACHE = {};\n\naxios.defaults.withCredentials = true;\n\n/**\n * 封装Get请求\n * @param url 请求的URL\n * @param successCallback 成功回调函数\n * @param errorCallback 失败回调函数\n */\nfunction get(url, successCallback, errorCallback) {\n  axios.get(url).then((res) => {\n    const data = res.data;\n    successCallback(data.content, data.total);\n  }).catch((err) => {\n    console.error(err);\n    errorCallback(err);\n  });\n}\n\nfunction post(url, param, successCallback, errorCallback) {\n  axios.post(url, param).then((res) => {\n    const data = res.data;\n    successCallback(data.content);\n  }).catch((err) => {\n    console.error(err);\n    errorCallback(err);\n  });\n}\n\n//\nconst dataSourcesObj = {};\n\n/**\n * 车型数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst truckModel = dataSourcesObj.truckModel = {\n  getData(params, callback) {\n    callback(TRUCK_MODEL_DATA, null);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n\n/**\n * 计量单位数据源\n * @param type\n * @param keyword\n * @param callback\n */\nfunction measureUnit(type, codeUnitType, keyword, callback) {\n  // console.log('type in LOCAL_CACHE', type, LOCAL_CACHE, (type in LOCAL_CACHE));\n  const realType = `${type}|${codeUnitType}`;\n  if (!(realType in LOCAL_CACHE)) {\n    LOCAL_CACHE[realType] = [callback];\n    let url = `${ApiConst.apiOrgConfigDomain}/measure_unit/${type}/get`;\n    if (codeUnitType) {\n      url += `?codeUnitType=${codeUnitType}`;\n    }\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': data[i].codeName,\n          'name': data[i].codeName,\n          'data': data[i]\n        });\n      }\n      // console.log('set cache for', type, LOCAL_CACHE);\n      // callback(autoData, null);\n      if (LOCAL_CACHE[realType].length) {\n        LOCAL_CACHE[realType].forEach((cb) => {\n          cb(autoData, null);\n        });\n      }\n      delete LOCAL_CACHE[realType];\n    }, (err) => {\n      console.error(err);\n      // callback(null, err);\n      if (LOCAL_CACHE[realType].length) {\n        LOCAL_CACHE[realType].forEach((cb) => {\n          cb(null, err);\n        });\n      }\n      delete LOCAL_CACHE[realType];\n    });\n  } else {\n    LOCAL_CACHE[realType].push(callback);\n    // callback(LOCAL_CACHE[type], null);\n  }\n}\n\n/**\n * 车辆尺寸单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst truckSize = dataSourcesObj.truckSize = {\n  getData(params, callback) {\n    measureUnit('truck.size', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 轮胎纹深单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 mm\n *               </p>\n * @param callback\n */\nconst tyrewrinklesNumber = dataSourcesObj.tyrewrinklesNumber = {\n  getData(params, callback) {\n    measureUnit('tyrewrinkles.number', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 车辆载重单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst truckCarry = dataSourcesObj.truckCarry = {\n  getData(params, callback) {\n    measureUnit('truck.carry', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 车辆容积单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst truckCubage = dataSourcesObj.truckCubage = {\n  getData(params, callback) {\n    measureUnit('truck.cubage', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 司机运价单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst driverPrice = dataSourcesObj.driverPrice = {\n  getData(params, callback) {\n    measureUnit('driver.price', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 标准时长单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst routeDuration = dataSourcesObj.routeDuration = {\n  getData(params, callback) {\n    measureUnit('route.duration', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 货物单价单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst goodsPrice = dataSourcesObj.goodsPrice = {\n  getData(params, callback) {\n    let codeUnitType = params.codeUnitType;\n    if (codeUnitType === 'truck') {\n      codeUnitType = undefined;\n    }\n    measureUnit('goods.price', codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 承运价单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst carrierPrice = dataSourcesObj.carrierPrice = {\n  getData(params, callback) {\n    measureUnit('carrier.price', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 货物数量单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst goodsNumber = dataSourcesObj.goodsNumber = {\n  getData(params, callback) {\n    measureUnit('goods.number', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 货量单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst goodsVolume = dataSourcesObj.goodsVolume = {\n  getData(params, callback) {\n    measureUnit('goods.volume', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 货物重量单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst goodsWeight = dataSourcesObj.goodsWeight = {\n  getData(params, callback) {\n    measureUnit('goods.weight', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 合理货差系数单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst goodsLossRation = dataSourcesObj.goodsLossRation = {\n  getData(params, callback) {\n    measureUnit('goods.loss.ration', null, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 合理货差单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst goodsLoss = dataSourcesObj.goodsLoss = {\n  getData(params, callback) {\n    let codeUnitType = params.codeUnitType;\n    if (codeUnitType === 'truck') {\n      codeUnitType = undefined;\n    }\n    measureUnit('goods.loss', codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 标准运距单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst standardDistance = dataSourcesObj.standardDistance = {\n  getData(params, callback) {\n    measureUnit('standard.distance', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 费用科目数量单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst chargeItemNumber = dataSourcesObj.chargeItemNumber = {\n  getData(params, callback) {\n    measureUnit('settle.volume.unit', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 费用科目价格单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst chargeItemPrice = dataSourcesObj.chargeItemPrice = {\n  getData(params, callback) {\n    measureUnit('goods.price', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 结算货量单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst settleVolumeUnit = dataSourcesObj.settleVolumeUnit = {\n  getData(params, callback) {\n    measureUnit('settle.volume.unit', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 费用科目金额单位数据源\n * @param params <p>\n *                  keyword => 关键词\n *                  codeUnitType => 单位类型 ton、truck、cube\n *               </p>\n * @param callback\n */\nconst chargeItemAmount = dataSourcesObj.chargeItemAmount = {\n  getData(params, callback) {\n    measureUnit('price.unit', params.codeUnitType, params.keyword, callback);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\nfunction _getConfig(url, filter, cb) {\n  const configData = [];\n  get(url, (data) => {\n    data.forEach((val) => {\n      if (filter.indexOf(val.fieldConfigCode) > -1) {\n        configData.push(val);\n      }\n    });\n    cb({ content: configData }, null);\n  }, (err) => {\n    console.error(err);\n    cb(null, err);\n  });\n}\n\nfunction _getListData(url, cb) {\n  get(url, (data, total) => {\n    cb({ content: data, total: total }, null);\n  }, (err) => {\n    cb(null, err);\n  });\n}\n\n/**\n * 车辆数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst truck = dataSourcesObj.truck = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiTruckDomain}/truck/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    // console.log('test', { 'keyword': keyword, 'size': PAGE_SIZE });\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].truckLicenseNo ? data[i].truckLicenseNo : '-'}`,\n          'name': `${data[i].truckLicenseNo ? data[i].truckLicenseNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '车辆';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/truck/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/truck/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/truck/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['truckLicenseNo'];\n    _getConfig(`${ApiConst.apiTruckDomain}/list_render_info/truck/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['truckLicenseNo'];\n    _getConfig(`${ApiConst.apiTruckDomain}/search_render_info/truck/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiTruckDomain}/truck/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 挂车数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst trailer = dataSourcesObj.trailer = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiTruckDomain}/trailer/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].truckLicenseNo ? data[i].truckLicenseNo : '-'}`,\n          'name': `${data[i].truckLicenseNo ? data[i].truckLicenseNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '挂车';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/trailer/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/trailer/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/trailer/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/trailer/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/trailer/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/trailer/add.html';\n  },\n  getColumns(cb) {\n    const config = ['truckLicenseNo'];\n    _getConfig(`${ApiConst.apiTruckDomain}/list_render_info/trailer/list`, config, cb);\n  },\n  getSearch(cb) {\n    const config = ['truckLicenseNo'];\n    _getConfig(`${ApiConst.apiTruckDomain}/search_render_info/trailer/list`, config, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiTruckDomain}/trailer/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n/**\n * 所有车辆数据源，不分主挂车\n * @type {{getData: (function(*, *)), getObjectName: (function()), getDetailUrl: (function(*, *)), getEditUrl: (function(*, *)), getAddUrl: (function(*)), getColumns: (function(*=)), getSearch: (function(*=)), getListData: (function(*=, *=))}}\n */\nconst allTruck = dataSourcesObj.allTruck = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiTruckDomain}/truck/all/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    // console.log('test', { 'keyword': keyword, 'size': PAGE_SIZE });\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].truckLicenseNo ? data[i].truckLicenseNo : '-'}`,\n          'name': `${data[i].truckLicenseNo ? data[i].truckLicenseNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '车辆';\n  },\n  getDetailUrl(code, objectName, object) {\n    if (object && object.isTrailer) {\n      return '/trailer/add.html';\n    }\n    // return `/truck/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getEditUrl(code, objectName, object) {\n    if (object && object.isTrailer) {\n      return '/trailer/add.html';\n    }\n    // return `/truck/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/truck/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['truckLicenseNo'];\n    _getConfig(`${ApiConst.apiTruckDomain}/list_render_info/truck/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['truckLicenseNo'];\n    _getConfig(`${ApiConst.apiTruckDomain}/search_render_info/truck/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiTruckDomain}/truck/all/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 司机数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst driver = dataSourcesObj.driver = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiPersonDomain}/person/driver/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].fullName ? data[i].fullName : '-'} - ${data[i].phone ? data[i].phone : '-'}`,\n          'name': `${data[i].fullName ? data[i].fullName : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getDetailUrl(code, objectName) {\n    // return `/driver/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/driver/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/driver/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/driver/add.html';\n  },\n  getEditUrl(code, objectName) {\n    return '/driver/add.html';\n  },\n  getObjectName() {\n    return '司机';\n  },\n  getSearch(cb) {\n    const filter = ['fullName'];\n    _getConfig(`${ApiConst.apiPersonDomain}/search_render_info/driver/list`, filter, cb);\n  },\n  getColumns(cb) {\n    const filter = ['fullName', 'phone', 'userTag'];\n    _getConfig(`${ApiConst.apiPersonDomain}/list_render_info/driver/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiPersonDomain}/person/driver/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 伙伴数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst partner = dataSourcesObj.partner = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiOrgDomain}/partner/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].orgName ? data[i].orgName : '-'}(${data[i].linkmanFullName ? data[i].linkmanFullName : '-'})`,\n          'name': `${data[i].orgName ? data[i].orgName : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '伙伴';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/partner/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/partner/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/partner/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/partner/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['orgName'];\n    _getConfig(`${ApiConst.apiOrgDomain}/list_render_info/partner/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['orgName'];\n    _getConfig(`${ApiConst.apiOrgDomain}/search_render_info/partner/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiOrgDomain}/partner/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 公司数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst company = dataSourcesObj.company = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiPlatformDomain}/cert_org/org/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].ownerOrgName ? data[i].ownerOrgName : '-'}(${data[i].linkmanFullName ? data[i].linkmanFullName : '-'})`,\n          'name': `${data[i].ownerOrgName ? data[i].ownerOrgName : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '公司';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/orgManagement/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/orgManagement/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/partner/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/orgManagement/add.html';\n  },\n  getColumns(cb) {\n    const success = {\n      code: 200,\n      content: [\n        {\n          showName: '公司名称',\n          fieldConfigCode: 'orgName',\n          elementCode: 'label',\n          extraParams: '{\"field1\":\"orgName\",\"field2\":\"orgCode\",\"field3\":\"pop\"}'\n        }\n      ]\n    };\n    cb(success);\n    return success;\n  },\n  getSearch(cb) {\n    const success = {\n      code: 200,\n      content: [\n        {\n          showName: '公司名称',\n          fieldConfigCode: 'orgName',\n          elementCode: 'text',\n          extraParams: '{\"field1\":\"orgName\", \"placeholder1\":\"请输入公司名称\"}'\n        }\n      ]\n    };\n    cb(success);\n    return success;\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiPlatformDomain}/cert_org/org/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 银行账户数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst bankAccount = dataSourcesObj.bankAccount = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiOrgDomain}/org/bank/account/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].bankName ? data[i].bankName : '-'}(${data[i].bankAccountNo ? data[i].bankAccountNo : '-'})`,\n          'name': `${data[i].bankAccountName ? data[i].bankAccountName : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '银行账户';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/bankAccount/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/bankAccount/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/partner/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/bankAccount/add.html';\n  },\n  getColumns(cb) {\n    const success = {\n      code: 200,\n      content: [\n        {\n          showName: '银行户名',\n          fieldConfigCode: 'bankAccountName',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"bankAccountName\", \"required\": \"false\"}'\n        },\n        {\n          showName: '开户行',\n          fieldConfigCode: 'bankName',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"bankName\", \"required\": \"false\"}'\n        },\n        {\n          showName: '银行账号',\n          fieldConfigCode: 'bankAccountNo',\n          elementCode: 'text',\n          extraParams: '{\"field1\": \"bankAccountNo\", \"required\": \"true\", \"detailLinkVisiable\":\"true\"}'\n        },\n        {\n          showName: '描述',\n          fieldConfigCode: 'description',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"description\", \"required\": \"false\"}'\n        },\n        {\n          showName: '创建人',\n          fieldConfigCode: 'creatorUsername',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"creatorUsername\", \"required\": \"false\"}'\n        },\n        {\n          showName: '创建时间',\n          fieldConfigCode: 'createTime',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"createTime\", \"required\": \"false\"}'\n        },\n        {\n          showName: '修改人',\n          fieldConfigCode: 'updateUsername',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"updateUsername\", \"required\": \"false\"}'\n        },\n        {\n          showName: '修改时间',\n          fieldConfigCode: 'updateTime',\n          elementCode: 'label',\n          extraParams: '{\"field1\": \"updateTime\", \"required\": \"false\"}'\n        }\n      ]\n    };\n    cb(success);\n    return success;\n  },\n  getSearch(cb) {\n    const success = {\n      code: 200,\n      content: [\n        {\n          showName: '银行账号',\n          fieldConfigCode: 'bankAccountNo',\n          elementCode: 'text',\n          extraParams: '{\"field1\": \"bankAccountNo\", \"placeholder1\":\"请输入银行账号\"}'\n        }\n      ]\n    };\n    cb(success);\n    return success;\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiOrgDomain}/org/bank/account/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 运单数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst waybill = dataSourcesObj.waybill = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiWayBillDomain}/waybill/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].waybillNo ? data[i].waybillNo : ''}-${data[i].goodsName ? data[i].goodsName : ''}-${data[i].routeName ? data[i].routeName : ''}`,\n          'name': `${data[i].waybillNo ? data[i].waybillNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getDetailUrl(code, objectName) {\n    return '/waybill/add.html';\n    // return `/waybill/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n  },\n  getObjectName() {\n    return '运单';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/waybill/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/partner/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/waybill/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/partner/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/waybill/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['waybillNo', 'goodsName'];\n    _getConfig(`${ApiConst.apiWayBillDomain}/list_render_info/waybill/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['waybillNo'];\n    _getConfig(`${ApiConst.apiWayBillDomain}/search_render_info/waybill/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiWayBillDomain}/waybill/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n\n/**\n * 线路数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst route = dataSourcesObj.route = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiLineDomain}/resource/route/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].routeName ? data[i].routeName : '-'}`,\n          'name': `${data[i].routeName ? data[i].routeName : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '线路';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/route/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/route/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/route/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/route/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/route/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/route/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['routeName', 'loadingOrg', 'unloadingOrg'];\n    _getConfig(`${ApiConst.apiResourceDomain}/list_render_info/route/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['routeName'];\n    _getConfig(`${ApiConst.apiResourceDomain}/search_render_info/route/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiResourceDomain}/resource/route/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n/**\n * 运价数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst rates = dataSourcesObj.rates = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiLineDomain}/resource/rates/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].ratesName ? data[i].ratesName : '-'}(${data[i].routeName ? data[i].routeName : '-'})`,\n          'name': `${data[i].ratesName ? data[i].ratesName : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '运价';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/rates/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/rates/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/rates/add.html?code={code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/rates/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/rates/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/rates/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['goodsName', 'goodsUnitPrice', 'clientFreightPrice', 'driverReferencePrice', 'goodsLossMethod', 'createTime'];\n    _getConfig(`${ApiConst.apiResourceDomain}/list_render_info/rates/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['goodsName'];\n    _getConfig(`${ApiConst.apiResourceDomain}/search_render_info/rates/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    // const url = `${ApiConst.apiResourceDomain}/resource/rates/list?${objToParamStr(paramsObj)}`;\n    // _getListData(url, callback);\n    RateService.list(paramsObj, callback);\n  }\n};\n\n/**\n * 订单数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst logistics = dataSourcesObj.logistics = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiLogisticsDomain}/logistics/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].clientOrgName ? data[i].clientOrgName : '-'} - ${data[i].logisticsNo ? data[i].logisticsNo : '-'}`,\n          'name': `${data[i].logisticsNo ? data[i].logisticsNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '订单';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/logistics/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/logistics/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/logistics/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/logistics/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/logistics/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/logistics/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['logisticsNo', 'clientOrg', 'route', 'goodsName', 'goodsWeight'];\n    _getConfig(`${ApiConst.apiLogisticsDomain}/list_render_info/logistics/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['logisticsNo', 'clientOrg'];\n    _getConfig(`${ApiConst.apiLogisticsDomain}/search_render_info/logistics/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiLogisticsDomain}/logistics/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n\n/**\n * 合约据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst transportContract = dataSourcesObj.transportContract = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiLogisticsDomain}/contract/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].clientOrgName ? data[i].clientOrgName : '-'} - ${data[i].contractNo ? data[i].contractNo : '-'}`,\n          'name': `${data[i].contractNo ? data[i].contractNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    }, (err) => {\n      console.error(err);\n      callback(null, err);\n    });\n  },\n  getObjectName() {\n    return '合约';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/logistics_contract/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/contract/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/logistics_contract/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/contract/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/logistics_contract/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/contract/add.html';\n  },\n  getColumns(cb) {\n    const filter = ['contractNo', 'contractName', 'contractExpiryDate'];\n    _getConfig(`${ApiConst.apiLogisticsDomain}/list_render_info/logisticsContract/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['contractNo', 'contractName'];\n    _getConfig(`${ApiConst.apiLogisticsDomain}/search_render_info/logisticsContract/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiLogisticsDomain}/logistics_contract/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n\n/**\n * 省据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst province = dataSourcesObj.province = {\n  getData(params, callback) {\n    const autoData = [];\n    area.forEach((data) => {\n      autoData.push({\n        'id': `${data.code}`,\n        'value': data.name,\n        'name': data.name,\n        'data': data.name\n      });\n    });\n    callback(autoData, null);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n\n/**\n * 市据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst city = dataSourcesObj.city = {\n  getData(params, callback) {\n    const autoData = [];\n    for (let i = 0; i < area.length; i++) {\n      const province = area[i];\n      if (province.code == params.keyword) {\n        const citys = province.citys;\n        citys.forEach((data) => {\n          autoData.push({\n            'id': `${data.code}`,\n            'value': data.name,\n            'name': data.name,\n            'data': data.name\n          });\n        });\n        break;\n      }\n    }\n    callback(autoData, null);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n/**\n * 区据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst county = dataSourcesObj.county = {\n  getData(params, callback) {\n    const autoData = [];\n    for (let i = 0; i < area.length; i++) {\n      const province = area[i];\n      const citys = province.citys;\n      for (let j = 0; j < citys.length; j++) {\n        const city = citys[j];\n        if (city.code == params.keyword) {\n          const areas = city.county;\n          areas.forEach((data) => {\n            autoData.push({\n              'id': `${data.code}`,\n              'value': data.name,\n              'name': data.name,\n              'data': data.name\n            });\n          });\n          break;\n        }\n      }\n    }\n    callback(autoData, null);\n  },\n  getDetailUrl(code, objectName) {\n    return null;\n  }\n};\n/**\n * 运力数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst transport = dataSourcesObj.transport = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiTransportDomain}/transport/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].mainTruckLicenseNo ? data[i].mainTruckLicenseNo : ''} - ${data[i].driverFullName ? data[i].driverFullName : ''} - ${data[i].trailerTruckLicenseNo ? data[i].trailerTruckLicenseNo : ''} - ${data[i].viceDriverFullName ? data[i].viceDriverFullName : ''}`,\n          'name': `${data[i].mainTruckLicenseNo ? data[i].mainTruckLicenseNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    });\n  },\n  getObjectName() {\n    return '车源';\n  },\n  getDetailUrl(code, objectName) {\n    // return `/transport/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n    return '/truck/add.html';\n  },\n  getEditUrl(code, objectName) {\n    // return `/transport/add.html?code=${code}&editable=true&objectName=${encodeURIComponent(objectName)}`;\n    return '/transport/add.html';\n  },\n  getAddUrl(objectName) {\n    // return `/transport/add.html?objectName=${encodeURIComponent(objectName)}`;\n    return '/transport/add.html';\n  },\n  getColumns(cb) {\n    // transportgetColumn(cb);\n    // 车辆来源， 主车编号，挂车编号， 主驾， 主驾手机号，副驾，副驾手机号\n    // 目前数据没有‘车辆来源’，暂时跳过\n    const filter = ['mainTruck', 'trailerTruck', 'driver', 'driverPhone', 'viceDriver', 'viceDriverPhone'];\n    _getConfig(`${ApiConst.apiTransportDomain}/detail_render_info/transport/list`, filter, cb);\n  },\n  getSearch(cb) {\n    const filter = ['mainTruck', 'trailerTruck'];\n    _getConfig(`${ApiConst.apiTransportDomain}/search_render_info/transport/list`, filter, cb);\n  },\n  getListData(paramsObj, callback) {\n    const url = `${ApiConst.apiTransportDomain}/transport/list?${objToParamStr(paramsObj)}`;\n    _getListData(url, callback);\n  }\n};\n\n/**\n * 轮胎数据源\n * @param params <p>\n *                  keyword => 关键词\n *               </p>\n * @param callback\n */\nconst tyre = dataSourcesObj.tyre = {\n  getData(params, callback) {\n    const url = `${ApiConst.apiMaintenaceDomain}/maintenance_tyre_record/list?size=${PAGE_SIZE}&keyword=${params.keyword}`;\n    get(url, (data) => {\n      const len = data.length,\n        autoData = [];\n      for (let i = 0; i < len; i += 1) {\n        autoData.push({\n          'id': data[i].code,\n          'value': `${data[i].tyreNo ? data[i].tyreNo : '-'} - ${data[i].truckLicenseNo ? data[i].truckLicenseNo : '-'}`,\n          'name': `${data[i].tyreNo ? data[i].tyreNo : data[i].code}`,\n          'data': data[i]\n        });\n      }\n      callback(autoData, null);\n    });\n  },\n  getDetailUrl(code, objectName) {\n    return `/maintenance_tyre_record/add.html?code=${code}&editable=false&objectName=${encodeURIComponent(objectName)}`;\n  }\n};\n\nfunction getAllListData(sources, params, cb) {\n  let data = [],\n    count = 0,\n    total = 0;\n  const len = sources.length;\n  //content: data, total: total\n  sources.forEach((val) => {\n    dataSourcesObj[val].getListData(params, (success) => {\n      if (success && success.content && success.total) {\n        data = data.concat(success.content);\n        total += success.total;\n      }\n      count += 1;\n      if (count === len) {\n        cb({ content: data, total: total }, null);\n      }\n    });\n  });\n}\nfunction getAll(sources, params, cb) {\n  let data = [],\n    count = 0;\n  const len = sources.length,\n    cacheArray = ['province', 'city', 'county', 'goodsLossRation', 'goodsLoss', 'standardDistance', 'goodsNumber', 'goodsVolume', 'goodsWeight', 'chargeItemNumber', 'chargeItemPrice', 'chargeItemAmount', 'truckModel', 'truckSize', 'truckCarry', 'truckCubage', 'driverPrice', 'routeDuration', 'goodsPrice', 'carrierPrice'];\n  sources.forEach((val) => {\n    const key = `${val}-${Object.keys(params)}-${Object.values(params)}`;\n    if (localStorage.getItem(key)) {\n      data = data.concat(JSON.parse(localStorage.getItem(key)));\n      count += 1;\n      if (count === len) {\n        cb(data, null);\n      }\n    } else {\n      dataSourcesObj[val].getData(params, (success) => {\n        if (cacheArray.indexOf(val) > -1) {\n          localStorage.setItem(key, JSON.stringify(success));\n        }\n        data = data.concat(success);\n        count += 1;\n        if (count === len) {\n          cb(data, null);\n        }\n      });\n    }\n  });\n}\n\nexport {\n  waybill,\n  province,\n  city,\n  county,\n  goodsLossRation,\n  goodsLoss,\n  standardDistance,\n  goodsNumber,\n  goodsVolume,\n  goodsWeight,\n  settleVolumeUnit,\n  chargeItemNumber,\n  chargeItemPrice,\n  chargeItemAmount,\n  truckModel,\n  truckSize,\n  truckCarry,\n  truckCubage,\n  driverPrice,\n  routeDuration,\n  goodsPrice,\n  carrierPrice,\n  truck,\n  trailer,\n  allTruck,\n  driver,\n  partner,\n  company,\n  bankAccount,\n  route,\n  rates,\n  logistics,\n  transportContract,\n  transport,\n  tyre,\n  getAll,\n  getAllListData\n};\n",null]}